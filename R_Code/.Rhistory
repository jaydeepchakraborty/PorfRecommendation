#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=4)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=5)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=6)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#setting the workspace
ws = "/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code"
#ws = "/Users/jaydeep/jaydeep_workstation/Workplace/Kaggle/ProfSim"
setwd(ws)
######################### Variable Declaration Start #########################
img_dir = paste(ws,"/images/",sep = "")
img_extn  = ".jpeg"
######################### Variable Declaration End ###########################
######################### Loading the Data Start #########################
lda.data <- read.csv(file="lda-topic-matrix.csv", header = F)
lda.data <- lda.data*100
######################### Loading the Data End ###########################
######################### Data Preparation Start #########################
#Standardize the data
lda.data.stand <- as.data.frame(scale(lda.data))
######################### Data Preparation End ###########################
############ Hierarchical cluster Start ##############
#This will calculate distance matrix, by default euclidean
lda.data.dist = dist(lda.data.stand, method = 'euclidean')
#Hierarchical Clustering, method can be various like ward.D,ward.D2,single, complete, average
lda.data.hclust = hclust(lda.data.dist,method = "complete")
############ Hierarchical cluster End ##############
############ Plotting Hierarchical cluster Start ##############
#ploting dendogram(vertical)
plot(lda.data.hclust)
#ploting dendogram(horizontal)
plot(as.dendrogram(lda.data.hclust), horiz = TRUE)
############ Plotting Hierarchical cluster Start ##############
############ Plotting Hierarchical cluster colored Dendogram Start ##############
# colored dendrogram
library("dendextend")
file_path = paste(img_dir,"LDA_DENDO_PLOT",img_extn,sep = "")
jpeg(file = file_path)
# using piping to get the dendogram object
dend <- as.dendrogram(lda.data.hclust)
dend %>% color_branches(h=4) %>% plot(horiz=TRUE, main = "LDA Dendogram")
# add horizontal rectangle
dend %>% rect.dendrogram(h=4,horiz=TRUE)
# add horiz (well, vertical) line:
abline(v = 4 , lwd = 2, lty = 2, col = "blue")
dev.off()
############ Plotting Hierarchical cluster colored Dendogram End ##############
############ Plotting HeatMap Start ##############
#ploting heatMap
library(gplots)
file_path = paste(img_dir,"LDA_HEATMAP_PLOT",img_extn,sep = "")
jpeg(file = file_path)
dend <- as.dendrogram(lda.data.hclust)
hm_matrix  <- as.matrix(lda.data)
heatmap.2(hm_matrix, Rowv = dend,srtCol=10,main="LDA HEATMAP")
dev.off()
############ Plotting HeatMap End ##############
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=2)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=3)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=4)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=5)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=6)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#setting the workspace
ws = "/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code"
#ws = "/Users/jaydeep/jaydeep_workstation/Workplace/Kaggle/ProfSim"
setwd(ws)
######################### Variable Declaration Start #########################
img_dir = paste(ws,"/images/",sep = "")
img_extn  = ".jpeg"
######################### Variable Declaration End ###########################
######################### Loading the Data Start #########################
lda.data <- read.csv(file="lda-topic-matrix.csv", header = F)
lda.data <- lda.data*100
######################### Loading the Data End ###########################
######################### Data Preparation Start #########################
#Standardize the data
lda.data.stand <- as.data.frame(scale(lda.data))
######################### Data Preparation End ###########################
############ Hierarchical cluster Start ##############
#This will calculate distance matrix, by default euclidean
lda.data.dist = dist(lda.data.stand, method = 'euclidean')
#Hierarchical Clustering, method can be various like ward.D,ward.D2,single, complete, average
lda.data.hclust = hclust(lda.data.dist,method = "single")
############ Hierarchical cluster End ##############
############ Plotting Hierarchical cluster Start ##############
#ploting dendogram(vertical)
plot(lda.data.hclust)
#ploting dendogram(horizontal)
plot(as.dendrogram(lda.data.hclust), horiz = TRUE)
############ Plotting Hierarchical cluster Start ##############
############ Plotting Hierarchical cluster colored Dendogram Start ##############
# colored dendrogram
library("dendextend")
file_path = paste(img_dir,"LDA_DENDO_PLOT",img_extn,sep = "")
jpeg(file = file_path)
# using piping to get the dendogram object
dend <- as.dendrogram(lda.data.hclust)
dend %>% color_branches(h=4) %>% plot(horiz=TRUE, main = "LDA Dendogram")
# add horizontal rectangle
dend %>% rect.dendrogram(h=4,horiz=TRUE)
# add horiz (well, vertical) line:
abline(v = 4 , lwd = 2, lty = 2, col = "blue")
dev.off()
############ Plotting Hierarchical cluster colored Dendogram End ##############
############ Plotting HeatMap Start ##############
#ploting heatMap
library(gplots)
file_path = paste(img_dir,"LDA_HEATMAP_PLOT",img_extn,sep = "")
jpeg(file = file_path)
dend <- as.dendrogram(lda.data.hclust)
hm_matrix  <- as.matrix(lda.data)
heatmap.2(hm_matrix, Rowv = dend,srtCol=10,main="LDA HEATMAP")
dev.off()
############ Plotting HeatMap End ##############
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=2)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=3)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=4)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=5)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=6)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#setting the workspace
ws = "/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code"
#ws = "/Users/jaydeep/jaydeep_workstation/Workplace/Kaggle/ProfSim"
setwd(ws)
######################### Variable Declaration Start #########################
img_dir = paste(ws,"/images/",sep = "")
img_extn  = ".jpeg"
######################### Variable Declaration End ###########################
######################### Loading the Data Start #########################
lda.data <- read.csv(file="lda-topic-matrix.csv", header = F)
lda.data <- lda.data*100
######################### Loading the Data End ###########################
######################### Data Preparation Start #########################
#Standardize the data
lda.data.stand <- as.data.frame(scale(lda.data))
######################### Data Preparation End ###########################
############ Hierarchical cluster Start ##############
#This will calculate distance matrix, by default euclidean
lda.data.dist = dist(lda.data.stand, method = 'euclidean')
#Hierarchical Clustering, method can be various like ward.D,ward.D2,single, complete, average
lda.data.hclust = hclust(lda.data.dist,method = "ward.D")
############ Hierarchical cluster End ##############
############ Plotting Hierarchical cluster Start ##############
#ploting dendogram(vertical)
plot(lda.data.hclust)
#ploting dendogram(horizontal)
plot(as.dendrogram(lda.data.hclust), horiz = TRUE)
############ Plotting Hierarchical cluster Start ##############
############ Plotting Hierarchical cluster colored Dendogram Start ##############
# colored dendrogram
library("dendextend")
file_path = paste(img_dir,"LDA_DENDO_PLOT",img_extn,sep = "")
jpeg(file = file_path)
# using piping to get the dendogram object
dend <- as.dendrogram(lda.data.hclust)
dend %>% color_branches(h=4) %>% plot(horiz=TRUE, main = "LDA Dendogram")
# add horizontal rectangle
dend %>% rect.dendrogram(h=4,horiz=TRUE)
# add horiz (well, vertical) line:
abline(v = 4 , lwd = 2, lty = 2, col = "blue")
dev.off()
############ Plotting Hierarchical cluster colored Dendogram End ##############
############ Plotting HeatMap Start ##############
#ploting heatMap
library(gplots)
file_path = paste(img_dir,"LDA_HEATMAP_PLOT",img_extn,sep = "")
jpeg(file = file_path)
dend <- as.dendrogram(lda.data.hclust)
hm_matrix  <- as.matrix(lda.data)
heatmap.2(hm_matrix, Rowv = dend,srtCol=10,main="LDA HEATMAP")
dev.off()
############ Plotting HeatMap End ##############
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=2)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=3)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=4)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=5)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
#getting the clusters based on height we have choosen
lda.data.op = cutree(lda.data.hclust,h=6)
#getting the clusters based on number of clusters we have choosen
#lda.data.op = cutree(lda.data.hclust,k=15)
#cluster labels are added
lda.data.clust <- data.frame(lda.data,lda.data.op)
#Library clusters allow us to represent (with the aid of PCA)
#the cluster solution into 2 dimensions:
library(cluster)
file_path = paste(img_dir,"LDA_HCLUST_PLOT",img_extn,sep = "")
jpeg(file = file_path)
clusplot(lda.data.clust, lda.data.clust$lda.data.op,
main='2D rep of the LDA Cluster solution',
color=TRUE, shade=TRUE,
labels=0, lines=0)
dev.off()
############ Writting to output file Start ##############
write.csv(lda.data.clust, file = "LDA_HCLUST_OP.csv")
############ Writting to output file End ################
