plot(age,weight)
cor(age,weight)
sd(weight)
prof_features
prof_features <- read.csv("./data/topicmatrix/lsa-topic-matrix.csv")
prof_features <- read.csv(file=file.path("./data/topicmatrix/","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("/data/topicmatrix/","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("../data/topicmatrix/","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("/../data/topicmatrix/","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("/data/topicmatrix/","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("/home/local/ASUAD/jchakra1/workspace/RecoProf/data/topicmatrix","lsa-topic-matrix.csv"))
plot(hc.complete)
plot(hc.complete)
plot(hc.complete)
#Cluster Dendogram for complete linkage
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/home/local/ASUAD/jchakra1/workspace/RecoProf/data/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/home/local/ASUAD/jchakra1/workspace/RecoProf/data/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
plot(prof_features)
plot(z)
plot(z)
z <- scale(z,m,s)
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/home/local/ASUAD/jchakra1/workspace/RecoProf/data/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features[-c(1,1),-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
View(z)
s <- apply(z,2,sd)
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features[-c(1,1),-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
View(z)
View(prof_features)
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features[,-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features[,-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
prof_features <- read.csv(file=file.path("/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features[,-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
prof_features <- read.csv(file=file.path("/topicmatrix","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("topicmatrix","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("../topicmatrix","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/topicmatrix","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/topicmatrix","lsa-topic-matrix.csv"))
View(prof_features)
#Normalization
z <- prof_features[,-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
View(z)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
plot(hc.complete, labels=prof_features$Professor)
plot(hc.complete, labels=prof_features$Professor, hang=-1)
plot(hc.complete, labels=prof_features$Professor, hang=1)
plot(hc.complete, labels=prof_features$Professor, hang=4)
plot(hc.complete, labels=prof_features$Professor, hang=0)
plot(hc.complete, labels=prof_features$Professor, hang=0.5)
plot(hc.complete, labels=prof_features$Professor, hang=0.1)
plot(hc.complete, labels=prof_features$Professor, hang=0.2)
plot(hc.complete, labels=prof_features$Professor, hang=0.3)
member.c <- cutree(hc.complete,2)
print(member.c)
#Silhouette Plot
library(cluster)
plot(silhouette(cutree(hc.complete,3),distance))
plot(silhouette(cutree(hc.complete,3),distance))
install.packages("cluster")
library("cluster")
plot(silhouette(cutree(hc.complete,3),distance))
install.packages("cluster",repos = "https://CRAN.R-project.org/package=cluster")
install.packages("cluster",dependencies=TRUE,repos = "https://CRAN.R-project.org/package=cluster")
install.packages("cluster",dependencies=TRUE,repos = "https://CRAN.R-project.org")
install.packages(c("cluster"),dependencies=TRUE,repos = "https://CRAN.R-project.org")
install.packages(c("cluster"),dependencies=TRUE)
plot(silhouette(cutree(hc.complete,3),distance))
install.packages("cluster")
install.packages("cluster")
install.packages("cluster")
install.packages("~/jaydeep/software/cluster_2.0.6.tar.gz", repos = NULL, type = "source")
library("compiler", lib.loc="/usr/lib/R/library")
library("grid", lib.loc="/usr/lib/R/library")
library("parallel", lib.loc="/usr/lib/R/library")
library("splines", lib.loc="/usr/lib/R/library")
library("stats4", lib.loc="/usr/lib/R/library")
library("tcltk", lib.loc="/usr/lib/R/library")
library("tools", lib.loc="/usr/lib/R/library")
install.packages("cluster")
install.packages(c("Rcpp", "tibble"))
X <- aperm(dat,c(3,2,1))
dim(X)<- c(5, 12)
dat <- array( rnorm(60), dim=c(4, 3, 5) )
X <- aperm(dat,c(3,2,1))
dim(X)<- c(5, 12)
View(X)
View(X)
dat <- array( rnorm(60), dim=c(4, 3, 5) )
X <- aperm(dat,c(3,2,1))
dim(X)<- c(5, 12)
View(X)
dat
aperm?
//
?aprem
?aperm
dat <- array( rnorm(60), dim=c(4, 3, 5) )
unlist(dat)
dat
dat <- array( rnorm(60), dim=c(4, 3, 5) )
X <- unlist(dat)
X
my.array = array(0, dim=c(2,3,4), dimnames=list( d1=c("A1","A2"),
d2=c("B1","B2","B3"), d3=c("C1","C2","C3","C4")) )
my.array
my.array = array(0,
dim=c(2,3,4),
dimnames=list(
d1=c("A1","A2"),d2=c("B1","B2","B3"), d3=c("C1","C2","C3","C4")) )
as.data.frame.table(my.array)
nmm<-matrix(c(1,1,NA,1,2,2,3,2,3,3,3,3,3,3,3,3,2,2,2,2,1,2,3,4,4,4,4,4,
1,1,2,1,2,2,2,2,NA,5,5,5,NA,NA,1,1,NA,NA,3,NA),nrow=4)
View(nmm)
krip.data <- read.csv(file="gold_copy.csv", header = F)
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
krip.data <- read.csv(file="gold_copy.csv", header = F)
View(krip.data)
kripp.alpha(krip.data)
install.packages("irr")
kripp.alpha(krip.data)
?kripp
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = F)
kripp.alpha(krip.data)
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = F)
kripp.alpha(krip.data,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = F)
kripp.alpha(unlist(krip.data),"nominal")
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = F)
kripp.alpha(table(unlist(krip.data)),"nominal")
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = F)
krip.matrix <- as.matrix(krip.data )
kripp.alpha(krip.matrix,"nominal")
View(krip.matrix)
View(krip.matrix)
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- as.matrix(krip.data)
kripp.alpha(krip.matrix,"nominal")
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- as.matrix(krip.data,nrow=4)
kripp.alpha(krip.matrix,"nominal")
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data,nrow=4))
kripp.alpha(krip.matrix,"nominal")
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"ordinal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
View(krip.data)
r1 <- krip.data[,1]
r1 <- krip.data[,0]
View(r1)
r1 <- krip.data[,1]
r1 <- krip.data[,1]
r2 <- krip.data[,2]
r3 <- krip.data[,3]
r1 <- krip.data[,1]
r2 <- krip.data[,2]
r3 <- krip.data[,3]
plot(r1,type = "o",col = "red", xlab = "datapoint", ylab = "rate",
main = "Rater Chart")
lines(r2, type = "o", col = "blue")
lines(r3, type = "o", col = "blue")
plot(r1,type = "o",col = "red", xlab = "datapoint", ylab = "rate",
main = "Rater Chart")
lines(r2, type = "o", col = "blue")
lines(r3, type = "o", col = "green")
plot(r1,type = "o",col = "red", xlab = "datapoint", ylab = "rate",
main = "Rater Chart")
?plot
plot(r1,type = "l",col = "red", xlab = "datapoint", ylab = "rate",
main = "Rater Chart")
lines(r2, type = "l", col = "blue")
lines(r3, type = "l", col = "green")
plot(r1,type = "l",col = "red", xlab = "datapoint", ylab = "rate",
main = "Rater Chart")
?plot
r1 <- krip.data[10,1]
r2 <- krip.data[10,2]
r3 <- krip.data[10,3]
plot(r1,type = "l",col = "red", xlab = "datapoint", ylab = "rate",
main = "Rater Chart")
lines(r2, type = "l", col = "blue")
lines(r3, type = "l", col = "green")
r1 <- krip.data[1:10,1]
r2 <- krip.data[1:10,2]
r3 <- krip.data[1:10,3]
plot(r1,type = "l",col = "red", xlab = "datapoint", ylab = "rate",
main = "Rater Chart")
lines(r2, type = "l", col = "blue")
lines(r3, type = "l", col = "green")
r1 <- krip.data[1:10,1]
r2 <- krip.data[1:10,2]
r3 <- krip.data[1:10,3]
plot(r1,type = "p",col = "red", xlab = "datapoint", ylab = "rate",
main = "Rater Chart")
lines(r2, type = "p", col = "blue")
lines(r3, type = "p", col = "green")
r1 <- krip.data[,1]
r2 <- krip.data[,2]
r3 <- krip.data[,3]
plot(r1,type = "p",col = "red", xlab = "datapoint", ylab = "rate",
main = "Rater Chart")
lines(r2, type = "p", col = "blue")
lines(r3, type = "p", col = "green")
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
