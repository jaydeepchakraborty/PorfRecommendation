plot(age,weight)
cor(age,weight)
sd(weight)
prof_features
prof_features <- read.csv("./data/topicmatrix/lsa-topic-matrix.csv")
prof_features <- read.csv(file=file.path("./data/topicmatrix/","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("/data/topicmatrix/","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("../data/topicmatrix/","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("/../data/topicmatrix/","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("/data/topicmatrix/","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("/home/local/ASUAD/jchakra1/workspace/RecoProf/data/topicmatrix","lsa-topic-matrix.csv"))
plot(hc.complete)
plot(hc.complete)
plot(hc.complete)
#Cluster Dendogram for complete linkage
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/home/local/ASUAD/jchakra1/workspace/RecoProf/data/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/home/local/ASUAD/jchakra1/workspace/RecoProf/data/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
plot(prof_features)
plot(z)
plot(z)
z <- scale(z,m,s)
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/home/local/ASUAD/jchakra1/workspace/RecoProf/data/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features[-c(1,1),-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
View(z)
s <- apply(z,2,sd)
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features[-c(1,1),-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
View(z)
View(prof_features)
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features[,-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
#This is bottom up approach: each observation starts in its own cluster
#and pairs of clusters are merged as one moves up the hierarchy
prof_features <- read.csv(file=file.path("/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features[,-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
prof_features <- read.csv(file=file.path("/topicmatrix","lsa-topic-matrix.csv"))
#Normalization
z <- prof_features[,-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
prof_features <- read.csv(file=file.path("/topicmatrix","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("topicmatrix","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("../topicmatrix","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/topicmatrix","lsa-topic-matrix.csv"))
prof_features <- read.csv(file=file.path("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/topicmatrix","lsa-topic-matrix.csv"))
View(prof_features)
#Normalization
z <- prof_features[,-c(1,1)]
m <- apply(z,2,mean)
s <- apply(z,2,sd)
z <- scale(z,m,s)
plot(z)
View(z)
#Calculating Euclidean distance
distance <- dist(z)
#Cluster Dendogram for complete linkage
hc.complete <- hclust(distance,method = 'complete')
plot(hc.complete)
plot(hc.complete, labels=prof_features$Professor)
plot(hc.complete, labels=prof_features$Professor, hang=-1)
plot(hc.complete, labels=prof_features$Professor, hang=1)
plot(hc.complete, labels=prof_features$Professor, hang=4)
plot(hc.complete, labels=prof_features$Professor, hang=0)
plot(hc.complete, labels=prof_features$Professor, hang=0.5)
plot(hc.complete, labels=prof_features$Professor, hang=0.1)
plot(hc.complete, labels=prof_features$Professor, hang=0.2)
plot(hc.complete, labels=prof_features$Professor, hang=0.3)
member.c <- cutree(hc.complete,2)
print(member.c)
#Silhouette Plot
library(cluster)
plot(silhouette(cutree(hc.complete,3),distance))
plot(silhouette(cutree(hc.complete,3),distance))
install.packages("cluster")
library("cluster")
plot(silhouette(cutree(hc.complete,3),distance))
install.packages("cluster",repos = "https://CRAN.R-project.org/package=cluster")
install.packages("cluster",dependencies=TRUE,repos = "https://CRAN.R-project.org/package=cluster")
install.packages("cluster",dependencies=TRUE,repos = "https://CRAN.R-project.org")
install.packages(c("cluster"),dependencies=TRUE,repos = "https://CRAN.R-project.org")
install.packages(c("cluster"),dependencies=TRUE)
plot(silhouette(cutree(hc.complete,3),distance))
install.packages("cluster")
install.packages("cluster")
install.packages("cluster")
install.packages("~/jaydeep/software/cluster_2.0.6.tar.gz", repos = NULL, type = "source")
library("compiler", lib.loc="/usr/lib/R/library")
library("grid", lib.loc="/usr/lib/R/library")
library("parallel", lib.loc="/usr/lib/R/library")
library("splines", lib.loc="/usr/lib/R/library")
library("stats4", lib.loc="/usr/lib/R/library")
library("tcltk", lib.loc="/usr/lib/R/library")
library("tools", lib.loc="/usr/lib/R/library")
install.packages("cluster")
install.packages(c("Rcpp", "tibble"))
setwd("/home/local/ASUAD/jchakra1/workspace/RecoProf/R_Code/")
library(irr)
krip.data <- read.csv(file="gold_copy.csv", header = T)
krip.matrix <- t(as.matrix(krip.data))
kripp.alpha(krip.matrix,"nominal")
