Partitioning and Scaling Signed Bipartite Graphs for Polarized Political Blogosphere
Sedat Gokalp
Computer Science Arizona State University Sedat.Gokalp@asu.edu

M'hamed Temkit
Mathematical Statistics Arizona State University Mhamed.Temkit@asu.edu

Hasan Davulcu
Computer Science Arizona State University Hasan.Davulcu@asu.edu 1) 2)

I. Hakki Toroslu
Computer Engineering Middle East Technical University Toroslu@ceng.metu.edu.tr

Abstract--Blogosphere plays an increasingly important role as a forum for public debate. In this paper, given a mixed set of blogs debating a set of political issues from opposing camps, we use signed bipartite graphs for modeling debates, and we propose an algorithm for partitioning both the blogs, and the issues (i.e. topics, leaders, etc.) comprising the debate into binary opposing camps. Simultaneously, our algorithm scales both the blogs and the underlying issues on a univariate scale. Using this scale, a researcher can identify moderate and extreme blogs within each camp, and polarizing vs. unifying issues. Through performance evaluations we show that our proposed algorithm provides an effective solution to the problem, and performs much better than existing baseline algorithms adapted to solve this new problem. In our experiments, we used both real data from political blogosphere and US Congress records, as well as synthetic data which were obtained by varying polarization and degree distribution of the vertices of the graph to show the robustness of our algorithm.

Partitioning of both the blogs, and the underlying issues mentioned in blogs, into two opposing camps; Scaling of both the blogs and the underlying issues on a univariate scale such that the position of a vertex is closer to the positions of the vertices it is connected with positive edges, and further away from the positions of the vertices it is connected with negative edges.

I.

I NTRODUCTION

Blogosphere plays an increasingly important role [1] as a forum of public debate, with knock-on consequences for the media, politics, and policy. Hotly debated issues span all spheres of human activity; from liberal vs. conservative politics, to extremist vs. counter-extremist religious debate, to climate change debate in scientific community, to globalization debate in economics, and to nuclear disarmament debate in security. There are many applications [2], [3], [4], [5], [6] for recognizing politically-oriented sentiment in texts. Previous work [7] studied linking patterns and discussion topics of political bloggers by measuring the degree of interaction between liberal and conservative blogs, and to uncover their differences. In this paper, given a mixed set of blogs debating a set of related issues from two opposing camps, we propose an algorithm to determine (i) which blog lies in which camp, (ii) what are the contested issues, and, (iii) who are mentioned as the key individuals within each camp. Bipartite graphs [8], [9], [10] have been widely used to represent relationships between two sets of entities. We use bipartite graphs to model the relationships between blogs and issues (i.e. topics, individuals, etc.) mentioned within blogs. We use signed weighted edges to represent opinion strengths, where positive edges denote support, and negative edges denote opposition between a blog and an issue. We develop algorithms to solve the following problems on signed bipartite graphs modeling blog debates:

Using this scale, a researcher can identify both the moderate and extreme blogs within each camp, and the polarizing vs. unifying issues. Partitioning and scaling help a researcher to better understand the structure of a social, political or economic debate, or even the details of an emerging geopolitical conflict in the world. While extremist ends of a scale, may represent blogs with irreconcilable viewpoints, in some cases, moderate blogs may represent viewpoints that are more amenable to engage in a constructive dialog through a set of unifying issues. Moderates may sympathize with some of the claims and grievances of the other side. Longitudinal analysis using our proposed algorithms could reveal interesting dynamics, such as, moderates from opposing camps could be in the process of forming a coalition by making the necessary compromises to reach a consensus. All the while, moderates may be alienating extremists in their own camps who may choose to focus on polarizing issues only, and lash out violent or demonizing rhetoric on everyone else who do not share their exclusivist viewpoints. To the best of our knowledge, simultaneous scaling and partitioning on signed weighted bipartite graphs has not been studied in the literature, and this paper is the first attempt to introduce the problem and provide an effective solution and evaluation strategies. Major contributions of this paper are: (1) an iterative algorithm, named Alternatingly Normalized CO-HITS (ANCOHITS), to propagate the scores on a signed bipartite graph to solve the partitioning and scaling problems described above; (2) a convergence proof for the proposed ANCO-HITS algorithm; (3) definition of a new coefficient to measure structural equilibrium for signed bipartite graphs using the multiplicative transitivity property presented in [11] exemplified by the phrase the enemy of my enemy is my friend; and (4) performance evaluations of blog/issue partitioning and scaling algorithms using synthetic data sets which were obtained by varying polarization and degree distribution of signed bipartite graphs, and analysis with two real data sets: (i) partitioning

and scaling of Republicans/Democrats and their roll call votes1 based on the 111th US Congress voting records, and (iii) partitioning and scaling of the top 22 liberal and conservative blogs, and the most influential individuals mentioned in these blogs. In our experiments, variance in polarization relates to the distributions of the ratio of vertices corresponding to extremes vs. moderates. Alongside our proposed ANCO-HITS, we also evaluated two baseline algorithms, namely CO-HITS [8] and spectral clustering [12]. Although Co-HITS was designed for scaling unsigned bipartite graphs, it can be directly applied for scaling signed bipartite graphs, and partitioning by considering the signs of vertex values. Spectral clustering algorithm was designed for partitioning of graphs, and it can also produce a scale by using the component values of the eigenvector associated with the second smallest positive eigenvalue of the graph Laplacian [13], [14]. Our experiments showed that the ANCO-HITS algorithm is the only robust algorithm in the presence of variance in polarization and vertex degrees. The rest of this paper is organized as follows. We review related work in Section 2. Section 3 presents the problem formulation. In Sections 4 and 5, we present the spectral clustering and CO-HITS algorithms as the baselines. In Section 6, we present our proposed ANCO-HITS algorithm, and its convergence proof. Section 7 presents the definition of structural equilibrium for signed bipartite graphs. We describe and report experimental evaluations in Section 8. Finally, we present conclusions and future work in Section 9. II. R ELATED W ORK

The clustering coefficient was first introduced in [17] to measure how much multiplicative transitivity property the graph exhibits, which reflects the tendency of the vertices to form small groups. In [11], authors define a new coefficient using the multiplicative transitivity for signed graphs to measure structural equilibrium. In this paper, we define another coefficient through multiplicative transitivity for signed bipartite graphs. Data mining methods such as clustering have been used quite extensively for exploratory data mining applications [18], [19]. Clustering analysis [20] provides a partitioning of the data into subsets, called clusters such that the objects in a cluster are more similar than those in distinct clusters. Spectral clustering [21], [12], [13] is a powerful clustering method that is able to outperform K-means clustering [22] in many cases, especially when the clusters are non convex. The method is based on computing the eigenvalues of the normalized version of the graph Laplacian, and has theoretical connections with the normalized cut of the graph. In particular when clustering a bipartite graph into two balanced clusters, the second smallest positive eigenvalue [13] is the solution to the normalized cut of the graph. In recent years, several authors have used spectral clustering to analyze bipartite graphs [10]. Furthermore, some work has been done to take into account a signed adjacency matrix by using an augmented adjacency matrix [23]. In this paper, spectral clustering was also used as one of our baseline methods for partitioning and scaling signed bipartite graphs. III. Given · G = (U  V, A) is a bipartite graph consisting of two disjoint sets of vertices U and V , and a signed adjacency matrix A U = {u1 , u2 , . . . , um }, a set of m vertices V = {v1 , v2 , . . . , vn }, a set of n vertices A  Rm×n , where aij represents the signed edge between ui and vj P ROBLEM F ORMULATION

A. CoScaling for signed bipartite graphs

Scaling vertices of a graph based on the network structure rather than individual properties has been of great interest for more than a decade. Two most well-known algorithms are the PageRank [15] and the HITS [16] algorithms. They were designed to rank the vertices of graphs with positive weighted edges. Spectral analysis show that both PageRank and HITS algorithms converge. An important distinction between the two algorithms is that; the HITS algorithm provides two different types of rankings corresponding to hubs and authorities, whereas PageRank provides only a single ranking. Many data types from data mining applications can be modeled as bipartite graphs, examples include terms and documents in a text corpus, customers and items purchased in market basket analysis and bloggers writing about current issues. Based on variations of HITS and PageRank, many researchers have proposed algorithms. In [8], the authors propose a modification of the HITS algorithm to work on bipartite graphs called CO-HITS. The main difference between HITS and CO-HITS is that; HITS provides two scores for each vertex, whereas CO-HITS provides one score for each type of vertex. In this paper, we use CO-HITS as one of the baseline algorithms, and in order to overcome its deficiencies, we extend it with normalization steps.
1 http://thomas.loc.gov/home/rollcallvotes.html

· · · Find · ·

X = (x1 , x2 , . . . , xm ), where xi  R is the assigned value of the vertex ui Y = (y1 , y2 , . . . , yn ), where yi  R is the assigned value of the vertex vi

such that · · sgn(xi ) and sgn(yi ) shall determine the polarity of the vertices i.e. -1 and +1 as the opposing polarities xi value for a vertex ui should be closer to the yj values of the vertices that it supports (connects positively), and further away from the yk values of the vertices that it opposes (connects negatively). The magnitudes of xi and yj denote the extremity of the nodes ui and vj . i.e. magnitudes closer to 0 meaning more moderate and larger magnitudes meaning more extreme.

u1 u2 u3

0

um-2um-1 um

X

in the presence of non-convex groups of data. This method has close connections with the normalized cut [12] of the graph. In particular when clustering a bipartite graph into two balanced clusters, the second smallest positive eigenvalue of the Laplacian matrix [21] is the solution to the problem of minimizing the normalized cut of the graph. Spectral clustering embeds the data into the subspace of the eigenvectors of the Laplacian. In this paper, we will use spectral clustering to partition both types of vertices of a signed bipartite graph into two polarities and provide a scale for the vertices. We will do this by using the sign and the value of the components of the eigenvector associated with the smallest positive eigenvalue of the Laplacian. Spectral clustering uses an adjacency matrix with all positive entries. However, our problem assumes a signed adjacency matrix. One of the common techniques to circumvent this problem is to augment the matrix into a bigger matrix [10], [25], [24], such that all entries are positive. The first half of the augmented matrix is reserved for the entries with positive values, and the second half is reserved for the entries with negative values. ~  Rm×2n such that Define A ~ = A+ , A- A where a+ ij = and similarly a- ij = -aij , if aij < 0 0, otherwise aij , if aij > 0 0, otherwise

v 1 v2 v3

vn-2 vn-1 vn Y

Fig. 1.

Perfectly polarized bipartite graph

u1

0

X

u2

0

X

Y

Y

Fig. 2.

Extreme vs. Moderate vertices

Figure 1 depicts a perfectly polarized bipartite graph. The two axes X and Y represent the univariate scale for the nodes in U and V . The vertices to the right of zero have positive values, and the vertices to the left have negative values on the scale. A green solid line between the nodes ui and vj represents support, and a red dashed line represents opposition. Figure 2 shows an example of two vertices; u1 being extreme and u2 being more moderate. u1 supports the vertices of same polarity, and opposes the vertices of the opposite polarity. However, u2 has mixed support and opposition. Although partitioning algorithms can be utilized to detect the polarity of vertices, it is not possible to distinguish extremes from moderates. Scaling overcomes this problem and makes it possible to compare two vertices of same polarity. In this paper, we are not only able to compare pairs of vertices, but also provide the exact locations on the scale, therefore providing valuable information about the shape of the distribution as well. To solve this co-scaling problem, we present two baseline methods. The first one is a common modification [24], [10], [25] of the well-known Spectral Clustering approach to work on graphs with signed edges. The second one is the COHITS [8] algorithm, that is a modification of the well-known HITS algorithm, designed for bipartite graphs. Finally, we compare these baseline methods with a novel algorithm we developed for co-scaling problem, named Alternatingly Normalized CO-HITS (ANCO-HITS). IV. S PECTRAL C LUSTERING

In order to partition and scale the nodes ui  U and vi  V , we define the following matrix:  B= ~T A 02n×2n
m+2n

0m×m

~ A

 

We define the Laplacian of B as L = D - B where D is the diagonal degree matrix and dii =
j =1

bij . We further

Spectral clustering [13] uses spectral graph theory, which is the study of graphs using linear algebra methods. In this context, for a given graph, its edge set is represented by an adjacency matrix. The eigenvectors of the normalized Laplacian of the adjacency matrix are used to partition the graph into clusters, where objects in a cluster are more similar than those in distinct clusters. Spectral clustering incorporates the properties of a graph via the adjacency matrix and is able to outperform K-means clustering in many situations, especially

compute the normalized Laplacian Lsym = D-1/2 LD-1/2 . It should be noted here that both L and Lsym are positive semidefinite. Let the eigenvalues of Lsym have the values 0 = 1  2  . . .  m+2n with associated eigenvectors v1 , v2 , . . . , vm+2n , our univariate scale being the eigenvector v2 . The first m components of v2 are set to be the X vector, and the following n components are set to be the Y vector, solutions of the co-scaling problem.

u1

0

X

u2

0

X

Y

Y

For this purpose, we propose ANCO-HITS algorithm, which introduces a normalization mechanism to address the issue of degree sensitivity of CO-HITS. The proposed method uses the same iteration procedure described in Algorithm 1. The update functions for X and Y are modified such that they are normalized as follows:
n

Fig. 3.

Extremity vs Degree

x<k> i V. CO-HITS In [8], the authors modify the well-known HITS [16] algorithm and propose the CO-HITS algorithm which is used to rank vertices of a bipartite graph. Even though the adjacency matrix has only positive values in the original HITS paper, the theory still holds for adjacency matrices with signed entries. Algorithm 1 describes the steps of the CO-HITS algorithm for the co-scaling problem. Data: Adjacency matrix A Result: Scale vectors X and Y Initiate X <0> = (1, 1, . . . , 1) ; Initiate Y <0> = (1, 1, . . . , 1) ; repeat Update X ; Update Y ; until X vector converges; Algorithm 1: Iterative update procedure for CO-HITS The update functions for X and Y are defined as follows:
n

=

j =1

<k-1> aij yj n

(4) |aij |

j =1 m <k> yj =

i=1 m

aij x<k> i (5) |aij |

i=1

Theorem 1: ANCO-HITS algorithm will converge for any matrix A  Rm×n , with |A| having non-zero row-sums and column-sums. Proof: Let B  Rm×m and C  Rn×n diagonal matrices with positive entries, where  1   n , if i = j  |aij | Bij = (6)  j =1   0, otherwise similarly, Cij =    
m

1 |aij |

, if i = j (7) otherwise

x<k> i

=
j =1 m

<k-1> aij yj

(1)

   i=1 0,

<k> yj = i=1

aij x<k> i

(2)

We should note here that both B and C matrices are symmetric and positive definite. The update rules for x and y vectors can be written in matrix notation as follows: x<k> = BAy <k-1> (8) (9) (10) y Therefore,
<k>

and convergence is achieved when X <k> - X <k-1> with a small positive value.
2

<

(3)

= CA x

T

<k>

x<k> = (BACAT )x<k-1>

The drawback of this method is its sensitivity to the degree of each vertex, in the sense that the higher degree the vertex has, the higher score it will be assigned on the scale. For example, let us consider two vertices u1 and u2 with u1 having a smaller degree than u2 . However, let u1 be more polarized than u2 as shown in Figure 3. In this scenario, the corresponding scale values for u1 and u2 should satisfy |x1 | > |x2 |. But, this will not be the case with the CO-HITS. This suggests a better algorithm that accounts for the negative impact of degree variation through some normalization mechanism. VI. A LTERNATINGLY N ORMALIZED CO-HITS (ANCO-HITS)

If there exists a vector x that the x<t> will converge in direction, it has to satisfy the equation: cx = (BACAT )x (11)

Even though this is an eigenvalue equation, the eigenvalues may not be real, because the matrix (BACAT ) is not symmetric. But if we multiply each side of the equation with B -1/2 , which exists since B is positive definite, we will get: cB - /2 x = B /2 ACAT B /2 B - /2 x
1 1 1 1

(12)

Define M  Rm×m to be M = B 1/2 ACAT B 1/2 and z  Rm×1 to be z = B -1/2 x , we will get cz = M z (13)

According to our problem formulation, the values of the vertices on the scale shall not be sensitive to their degrees, but rather be sensitive to what kind of relations they have with the other set of vertices.

which is again an eigenvalue equation. However, in this case M is a symmetric matrix, and can be shown to be positive semi-definite with z as an eigenvector c as an eigenvalue. The M matrix has a set of m eigenvectors that are all unit vectors

and all mutually orthogonal; that is, they form a basis for the space Rm . Let us denote the eigenvalues of the M matrix by c1 , c2 , . . . , cm sorted in such a way that c1  c2  . . .  cm  0, with the eigenvectors z1 , z2 , . . . , zm respectively. Using Equation (10), we can write a compact form for the k th update iteration of x as follows: x<k> = (BACAT )k x<0> We can rewrite the above equation in terms of M matrix x<k> = B /2 M k B - /2 x<0>
1 1

u1

u2

u1

u2

a)
v1
u1

b)
v2
u2

v1
u1

v2
u2

c)
v1 v2

d)
v1 v2

(14)
Fig. 4. Cycles of four with negative edges

(15)

Any vector v  Rm can be written as a linear combination of the eigenvectors z1 , z2 , . . . , zm . Therefore, B - /2 x<0> = (a1 z1 + a2 z2 + . . . + am zm )
1

(16)

Bipartite graphs do not have cycles of odd length. Therefore, the structural equilibrium cannot be measured as formalized before. But it can be extended to calculate the ratio of balanced cycles of length four. For this purpose, we define the multiplicative transitivity for bipartite graphs as follows. A signed bipartite graph exhibits multiplicative transitivity when a path of three edges tend to be completed by a fourth edge having a sign equal to the product of the three edges' signs. This can be rephrased as the enemy of my enemy of my enemy is my enemy, or the enemy of my friend of my enemy is my friend, etc. Figure 4 depicts two cycles with odd number of edges (a and c), and two cycles with even number of edges (b and d). By definition, the cycles with odd number of negative edges do not satisfy multiplicative transitivity. Hence, the corresponding relative signed clustering coefficient can be reformulated for bipartite graphs as follows: A  AAT A ¯A ¯A ¯T A ¯ A
+ +

x<k> = B /2 M k (a1 z1 + a2 z2 + . . . + am zm )
1 1

= B /2 (a1 M k z1 + a2 M k z2 + . . . + am M k zm )
k k = B /2 (a1 ck 1 z1 + a2 c2 z2 + . . . + am cm zm )
1

As k goes to infinity, the x<k> vector will converge to a multiple of the B 1/2 z1 vector. x<k> 1 = a1 B /2 z1 k ck 1 lim (17)

Similarly, the convergence for the y <k> can be proved in the same fashion: y <k> = C
n×n
1/2

N k C - /2 y <0>
1 1/2

(18)
<k>

where N  R is N = C A BAC and the y vector will converge to a multiple of the C 1/2 q1 vector, with q1 being the principal eigenvector of the N matrix. VII. S TRUCTURAL E QUILIBRIUM

T

1/2

SE (A) =

For our experimental datasets, we report the corresponding SE values. VIII. E XPERIMENTS & E VALUATIONS

The relation phrased as the enemy of my enemy is my friend is observed on various networks. This relation in general can be formalized for graphs by constraining any cycle of arbitrary length to have even number of negative edges [26]. In [11], authors relate this constraint with the multiplicative transitivity property of an adjacency matrix, which can be measured using a modification of the clustering coefficient introduced in [17]. The structural equilibrium(SE) can be measured by checking the consistency of the edges forming cycles of length three. The relative signed clustering coefficient calculates the ratio of balanced cycles among all possible cycles of length three. SE (A) = · · A  A2 ¯A ¯2 A
+ +

To validate our algorithm, we have used two different datasets that are US Congress and political blogosphere. In addition to real data, we introduced a model to generate synthetic data to analyze the performance of the algorithms for various parameters. A. US Congress The US Congress has been collecting data since the very first congress of the US history. This data has been encoded as XML files and publicly shared through the govtrack.us project2 . From various types of data available at the project site, we collected the roll call votes for the 111th US Congress which includes The Senate and The House of Representatives and covers the years 2009-2010.

¯ is the absolute adjacency matrix with a A ¯ij = |aij | C = A  B is defined as the Hadamard product (element-wise product) for two matrices, such that cij = aij  bij x = A + is defined as the sum of all matrix elements, such that x = aij
i j

·

2 http://www.govtrack.us/data

TABLE I.

D ESCRIPTIVE SUMMARIES OF THE GRAPHS FOR EACH DATASET WITH THE PARTITIONING ACCURACIES FOR EACH ALGORITHM
111th US Senate 64 Democrat + 42 Republican Senators 696 Bills 88.36% 39.47% 100.00% 100.00% 100.00% 111th US House 268 Democrat + 183 Republican Representatives 1655 Bills 91.23% 39.37% 99.11% 99.56% 99.56% Political Blogosphere 13 Liberal + 9 Conservative Blogs 20 Liberal + 14 Conservative People 39.04% 87.21% 75.39% 98.21% 98.21%

Vertices in U Vertices in V Graph Density Structural Equilibrium Spectral Clustering CO-HITS ANCO-HITS

According to The Library of Congress3 , A roll call vote guarantees that every Member's vote is recorded, but only a minority of bills receive a roll call vote. The 111th Senate has 1084 senators and the data contains their votes on 696 bills, and The 111th House has 451 representatives and the data contains their votes on 1655 bills. We extracted the adjacency matrix A  {-1, 0, 1}|U |×|V | , with U vertices representing the congressmen, and the V vertices representing the bills. The values aij are 1 if the congressman ui votes `Yea' for the bill vj , -1 if the congressman votes `Nay', and 0 if he did not attend the session. The aforementioned scaling algorithms will scale both the congressmen and the bills. In presence of partisanship5 in the Congress, the sign of the scale values for the congressmen should correspond to the Democrat and Republican parties, and the magnitude of the scale values should represent the amount of partisanship. The first two columns of Table I provide information about this data as well as the partitioning accuracies of the algorithms. We analyzed the congressmen that have been assigned to be moderate by each algorithm. We observed that the baseline algorithms tend to have the congressmen with less number of votes (i.e. lesser degree) to be moderate regardless of their partisanship. On the other hand, when we queried the names assigned to be most moderates by the ANCO-HITS, for both Democrats and Republicans, we were able to identify a number of supporting articles matching the ANCO-HITS scaling [27], [28], [29], [30]. Figure 5 depicts the vote matrices of the 111th US Congress, with rows representing the congressmen and the columns representing the bills. The light green color represents 'Yea' votes, and dark red represents 'Nay' votes. Scaling these graphs leads to a re-ordering of the rows and columns where congressmen and bills are co-clustered together. Figure 6 represents the bipartite graph of the 111th US Congress data after scaling both the congressmen and the bills with ANCO-HITS. The light green colored edges represent 'Yea' votes, and dark red represents 'Nay' votes. Similar to our motivating Figure 1, this figure also shows partisan behavior in the 111th US Congress.
3 http://thomas.loc.gov/home/rollcallvotes.html 4 Normally, each congress has 100 senators (2 from each state), however in many of the congresses, there are unexpected changes on the seats caused by displacements or deaths. 5 Partisanship can be defined as being devoted to or biased in support of a party.

111th US Senate

111th US Congress

Fig. 5.

Vote matrix after scaling with ANCO-HITS

111th US Senate

111th US Congress

Fig. 6.

Bipartite graphs after scaling with ANCO-HITS

TABLE II.
Blog name Huffington Post Daily Kos Boing Boing Crooks and Liars Firedoglake AMERICABlog Think Progress Talking Points Memo Wonkette Balloon Juice Digby's Hullabaloo Informed Comment Truthdig Hot Air Reason - Hit and Run Little green footballs Atlas shrugs Stop the ACLU Wizbangblog Michelle Malkin Red State Pajamas media URL

L IST OF P OLITICAL B LOGS
Political Camp Liberal Liberal Liberal Liberal Liberal Liberal Liberal Liberal Liberal Liberal Liberal Liberal Liberal Conservative Conservative Conservative Conservative Conservative Conservative Conservative Conservative Conservative Posts 3959 1957 1576 1497 1354 1297 1197 1081 1064 923 553 179 159 1579 1563 787 773 741 621 532 311 97

http://www.huffingtonpost.com/ http://www.dailykos.com/ http://www.boingboing.net/ http://www.crooksandliars.com/ http://www.firedoglake.com/ http://americablog.com/ http://thinkprogress.org/ http://www.talkingpointsmemo.com/ http://wonkette.com/ http://www.balloon-juice.com/ http://digbysblog.blogspot.com/ http://www.juancole.com/ http://www.truthdig.com/ http://hotair.com/ http://reason.com/blog http://littlegreenfootballs.com/ http://atlasshrugs2000.typepad.com/ http://www.stoptheaclu.com/ http://wizbangblog.com/ http://michellemalkin.com/ http://www.redstate.com/ http://pajamasmedia.com/

B. Political Blogosphere As Web 2.0 platforms gained popularity, it became easy for web users to be a part of the web and express their opinions, mostly through blogs. Most blogs are maintained by individuals, whereas there are also professional blogs with a group of authors. In this study, we focus on a set of popular political liberal or conservative blogs that have a clearly declared positions. These blogs contain discussions about social, political, economic issues and related key individuals. They express positive sentiment towards individuals whom they share ideologies with, and negative sentiment towards others. In these blogs, it is common to see criticism of people within the same camp, or support for people from the other camp. In this experiment, we collected a list of 22 most popular liberal and conservative blogs from the Technorati6 rankings. For each blog, we fetched the posts for the period of 6 months before the 2008 US presidential elections (May - October, 2008) due to the intensity of the debates and discussions. Table II shows the list of blogs with their URLs, political camps and the number of posts for the given period. We use AlchemyAPI to run a named entity tagger to extract people names from the posts, and entity-level sentiment analysis which provided us with weighted sentiment (positive values indicating support, and negative indicating opposition) for each person. This information was used to synthesize a signed bipartite graph, where the blogs and people correspond to the two sets of vertices U and V . The aij values of the adjacency matrix A are the cumulative sum of sentiment values for each mention of the person vj by the blog ui . To get a gold standard list of the most influential liberal and conservative people, we used The Telegraph List8 for 2007. The third column of Table I provides information about this data as well as the partitioning accuracies of the algorithms.
6 http://technorati.com/ 7 http://www.alchemyapi.com/ 8 http://www.telegraph.co.uk/news/uknews/1435447/ The-top-US-conservatives-and-liberals.html

C. Synthetic Data The actual partitioning information for the real datasets were available, which made it possible to check the partitioning accuracy of the algorithms. However, to thoroughly check the scaling accuracy of the algorithms, we developed a method to generate random bipartite graphs with the following properties: · The degrees and the scores for the vertices in U and V follow independent probability distribution with varying parameters and shapes.

Following procedure describes the method to generate random graphs. RandomGraph(m, n, Ddegree , Dscale ) Let A, U , V , X and Y be defined as in Definition 1. 1) 2) 3) 4) 5) Create m vertices for U , and n vertices for V Independently assign degrees 1  d(ui )  m and 1  d(vj )  n with probability distribution Ddegree Independently assign -1  xi , yj  +1 values with probability distribution Dscale . Generate an adjacency list of pairs (ui , vj ), where each node ui and vj occur in the list d(ui ) and d(vj ) times respectively. For each adjacency pair (ui , vj ), assign the entry in the adjacency matrix aij with value a) sgn(xi ) × sgn(yj ), with probability 1 - (1 - |xi |)(1 - |yj |) b) -sgn(xi ) × sgn(yj ), with probability (1 - |xi |)(1 - |yj |)

7

The difference between the scale obtained for a vertex by executing the scaling algorithm and its scale assigned by the random graph generator algorithm defines the error for that vertex. Table III shows the mean error vs vertex degrees plots for each algorithm applied to 12 different synthetic data sets. In our experiments, the number of vertices of the graph is m = n = 100. We used four different distributions for varying polarization. These were perfectly polarized, Beta, bimodal and uniform distributions [31]. Perfectly polarized distribution was obtained by mapping all vertices to the extremes of both

sides with equal probability. We used three different normal distributions for varying the degree distributions of vertices. Degree distributions were obtained by N (µ = 30,  = 2), N (µ = 30,  = 5) and N (µ = 30,  = 10) in order to evaluate the effect of degree variance on the performance of the algorithms. We also experimented with different µ values of 10, 30, and 50 in order to measure the effect of density variations of the graph on the performance of the algorithms, which did not show any significant impact. For each polarization and degree distribution we tested the performance of two baseline algorithms and our proposed algorithm. Table III presents these experimental results corresponding to 12 scenarios. In this table, columns correspond to the variance in degrees, and rows correspond to the polarization distributions. In order to better visualize the effect of the degree of the vertex in determining its scaling position we used the mean error as an aggregate score. In the scatter plots, x-axis corresponds to the degree of vertices of a graph, and y-axis corresponds to mean scaling error. There are some error peaks at the boundary degree values due to their low frequencies. From the table, we can make the following observations: · Across all polarizations, as the vertex degree variance increases, overall errors for baseline algorithms increase due to their sensitivity to vertex degrees. Between the baseline algorithms, spectral clustering consistently outperforms CO-HITS. Even though spectral clustering performs almost as good as our proposed ANCO-HITS for bimodal and uniform polarization distributions, when the polarization is high, as in the other two distributions, its performance degrades. As polarization increases, from U-shaped to perfect polarization, ANCO-HITS performance also increases. In case of perfect polarization, ANCO-HITS has almost no error.

degree senator to a moderate location, even though he or she can be extremely partisan. ANCO-HITS manages the degree bias by a normalizing scheme, and places this senator to an appropriate location. In order to analyze longitudinal voting patterns for the US Congresses, we downloaded all voting records since the 1st US Congress, executed ANCO-HITS, and produced an interactive visualization system as described in [32]. This system is accessible online at www.PartisanScale.com Our future work involves developing techniques for detecting and presenting both friendly and unfriendly neighborhoods of a blog or an issue, and their agreements and disagreements. We also plan to incorporate longitudinal analysis to detect trends and trajectories over time. ACKNOWLEDGMENTS We would like to thank Dananjayan Thirumalai for helping us collect the political blogosphere data. This research was supported in part by US DOD Minerva Research Initiative grant N00014-09-1-0815. R EFERENCES
[1] [2] D. Drezner and H. Farrell, "The power and politics of blogs," Public Choice, vol. 134, pp. 15­30, 2008. T. Mullen and R. Malouf, "A preliminary investigation into sentiment analysis of informal political discourse," in AAAI symposium on computational approaches to analysing weblogs (AAAI-CAAW), 2006, pp. 159­162. R. Malouf and T. Mullen, Graph-based user classification for informal online political discourse, 2007. M. Thomas, B. Pang, and L. Lee, "Get out the vote: Determining support or opposition from congressional floor-debate transcripts," in In Proceedings of EMNLP, 2006, pp. 327­335. M. Bansal, C. Cardie, and L. Lee, "The power of negative thinking: Exploiting label disagreement in the min-cut classification framework," Proceedings of COLING: Companion volume: Posters, pp. 13­16, 2008. W. Lin and A. Hauptmann, "Are these documents written from different perspectives?: a test of different perspectives based on statistical distribution divergence," in Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics. Association for Computational Linguistics, 2006, pp. 1057­1064. L. A. Adamic and N. Glance, "The political blogosphere and the 2004 u.s. election: divided they blog," in Proceedings of the 3rd international workshop on Link discovery, ser. LinkKDD '05. New York, NY, USA: ACM, 2005, pp. 36­43. H. Deng, M. Lyu, and I. King, "A generalized co-hits algorithm and its application to bipartite graphs," in Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 2009, pp. 239­248. M. Rege, M. Dong, and F. Fotouhi, "Co-clustering documents and words using bipartite isoperimetric graph partitioning," in Data Mining, 2006. ICDM'06. Sixth International Conference on. IEEE, 2006, pp. 532­ 541. H. Zha, X. He, C. Ding, H. Simon, and M. Gu, "Bipartite graph partitioning and data clustering," in Proceedings of the tenth international conference on Information and knowledge management. ACM, 2001, pp. 25­32. J. Kunegis, A. Lommatzsch, and C. Bauckhage, "The slashdot zoo: mining a social network with negative edges," in Proceedings of the 18th international conference on World wide web. ACM, 2009, pp. 741­750. U. V. Luxburg, "A tutorial on spectral clustering," 2007.

· ·

[3] [4]

·

[5]

[6]

Overall, in every single case our proposed ANCO-HITS algorithm outperforms the baselines. IX. C ONCLUSIONS & F UTURE W ORK
[7]

In this paper, we introduced a new problem for scaling and partitioning signed weighted bipartite graphs. We adapted two existing algorithms, and proposed a new algorithm to solve this problem. We used both real data from political blogosphere and US Congress records, as well as synthetic data to evaluate these algorithms. Our experiments showed that our proposed algorithm is very effective and outperforms the two other baselines. The algorithms in source code and the test data is available online at www.PartisanScale.com/paperdata In real world graphs, it is rarely the case that all the nodes have the same degree. Some bloggers have more extensive coverage than others. Similarly, some senators miss or abstain on more votes than others. Partisanship shall not be affected by the variance in node degrees. A marginal example is the case when a senator supersedes a deceased one through the end of the term. All the baseline algorithms assign this low

[8]

[9]

[10]

[11]

[12]

TABLE III.
Count

S YNTHETIC DATA PERFORMANCES
Count Count 0 20 40 Degree 60 80 100 0

0

20

40 Degree

60

80

100

20

40 Degree

60

80

100

N (µ = 30,  = 2)
1 Spectral Clustering CO-HITS ANCO-HITS 0.8 0.8 1

N (µ = 30,  = 5)
1 Spectral Clustering CO-HITS ANCO-HITS 0.8

N (µ = 30,  = 10)
Spectral Clustering CO-HITS ANCO-HITS

0.5

1

Mean Error

Mean Error

Perfectly Polarized

0 Scale

0.4

0.4

Mean Error 0 20 40 Degree 60 80 100

-0.5

-1

1

0.5

Beta distribution

Mean Error

Mean Error

0 Scale

0.4

0.4

Mean Error

-0.5

-1

1

0.5

Bimodal Distribution

Mean Error

Mean Error

0 Scale

0.4

0.4

Mean Error

-0.5

-1

1

0.5

Uniform Distribution

Mean Error

Mean Error

0 Scale

0.4

0.4

Mean Error

-0.5

-1

Count Count Count Count

0.6

0.6

0.6

0.4

0.2

0.2

0.2

0 0 20 40 Degree 1 Spectral Clustering CO-HITS ANCO-HITS 0.8 60 80 100

0

0 0 20 40 Degree 1 Spectral Clustering CO-HITS ANCO-HITS Spectral Clustering CO-HITS ANCO-HITS 0.8 60 80 100

1

0.8

0.6

0.6

0.6

0.4

0.2

0.2

0.2

0 0 20 40 Degree 1 Spectral Clustering CO-HITS ANCO-HITS 0.8 60 80 100

0 0 20 40 Degree 1 Spectral Clustering CO-HITS ANCO-HITS 0.8 60 80 100

0 0 20 40 Degree 1 Spectral Clustering CO-HITS ANCO-HITS 0.8 60 80 100

0.6

0.6

0.6

0.4

0.2

0.2

0.2

0 0 20 40 Degree 1 Spectral Clustering CO-HITS ANCO-HITS 0.8 60 80 100

0 0 20 40 Degree 1 Spectral Clustering CO-HITS ANCO-HITS 0.8 60 80 100

0 0 20 40 Degree 1 Spectral Clustering CO-HITS ANCO-HITS 0.8 60 80 100

0.6

0.6

0.6

0.4

0.2

0.2

0.2

0 0 20 40 Degree 60 80 100

0 0 20 40 Degree 60 80 100

0 0 20 40 Degree 60 80 100

[13]

[14]

[15] [16] [17] [18]

[19]

[20]

[21]

[22]

[23]

[24]

[25]

[26] [27] [28] [29] [30] [31] [32]

A. Ng, M. Jordan, and Y. Weiss, "On spectral clustering: Analysis and an algorithm," in Advances in Neural Information Processing Systems 14: Proceeding of the 2001 Conference, 2001, pp. 849­856. J. Shi and J. Malik, "Normalized cuts and image segmentation," Pattern Analysis and Machine Intelligence, IEEE Transactions on, vol. 22, no. 8, pp. 888 ­905, aug 2000. L. Page, S. Brin, R. Motwani, and T. Winograd, "The pagerank citation ranking: Bringing order to the web." 1999. J. Kleinberg, "Authoritative sources in a hyperlinked environment," Journal of the ACM (JACM), vol. 46, no. 5, pp. 604­632, 1999. D. Watts and S. Strogatz, "Collective dynamics of small-world networks," Nature, vol. 393, no. 6684, pp. 440­442, 1998. I. Dhillon, J. Fan, and Y. Guan, "Efficient clustering of very large document collections," Data mining for scientific and engineering applications, pp. 357­381, 2001. N. Slonim and N. Tishby, "Document clustering using word clusters via the information bottleneck method," in Proceedings of the 23rd annual international ACM SIGIR conference on Research and development in information retrieval. ACM, 2000, pp. 208­215. P. Berkhin, "Survey of clustering data mining techniques," Grouping Multidimensional Data: Recent Advances in Clustering, pp. 25­71, 2006. I. Dhillon, Y. Guan, and B. Kulis, "Kernel k-means: spectral clustering and normalized cuts," in Proceedings of the tenth ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 2004, pp. 551­556. J. Hartigan and M. Wong, "Algorithm as 136: A k-means clustering algorithm," Journal of the Royal Statistical Society. Series C (Applied Statistics), vol. 28, no. 1, pp. 100­108, 1979. J. Kunegis, S. Schmidt, A. Lommatzsch, J. Lerner, E. De Luca, and S. Albayrak, "Spectral analysis of signed graphs for clustering, prediction and visualization," in Proc SDM. Citeseer, 2010. I. Dhillon, "Co-clustering documents and words using bipartite spectral graph partitioning," in Proceedings of the seventh ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 2001, pp. 269­274. X. Fern and C. Brodley, "Solving cluster ensemble problems by bipartite graph partitioning," in Proceedings of the twenty-first international conference on Machine learning. ACM, 2004, p. 36. P. Hage and F. Harary, "Structural models in anthropology." 1983. S. T. Dennis, "Senate moderates look for more influence," http://www. rollcall.com/issues/56 90/-203808-1.html. J. Newton-Small, "Can ben nelson get a bipartisan stimulus win," http: //www.time.com/time/politics/article/0,8599,1877535,00.html. "Factions in the republican party (united states)," http://en.wikipedia. org/wiki/Factions in the Republican Party (United States). "Blue dog coalition," http://ross.house.gov/BlueDog/Members/. V. Rohatgi and A. Saleh, An introduction to probability and statistics. Wiley-India, 2008. S. Gokalp and H. Davulcu, "Partisan scale," in Proceedings of the 21st international conference companion on World Wide Web. ACM, 2012, pp. 349­352.

