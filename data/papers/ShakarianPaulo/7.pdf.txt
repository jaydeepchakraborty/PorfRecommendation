Toward Order-of-Magnitude Cascade Prediction
Ruocheng Guo , Elham Shaabani, Abhinav Bhatnagar and Paulo Shakarian
Arizona State University Tempe, AZ Email: {rguosni, shaabani, abhatn, shak}@asu.edu
Abstract--When a piece of information (microblog, photograph, video, link, etc.) starts to spread in a social network, an important question arises: will it spread to "viral" proportions ­ where "viral" is defined as an order-of-magnitude increase. However, several previous studies have established that cascade size and frequency are related through a power-law - which leads to a severe imbalance in this classification problem. In this paper, we devise a suite of measurements based on "structural diversity" ­ the variety of social contexts (communities) in which individuals partaking in a given cascade engage. We demonstrate these measures are able to distinguish viral from non-viral cascades, despite the severe imbalance of the data for this problem. Further, we leverage these measurements as features in a classification approach, successfully predicting microblogs that grow from 50 to 500 reposts with precision of 0.69 and recall of 0.52 for the viral class - despite this class comprising under 2% of samples. This significantly outperforms our baseline approach as well as the current state-of-the-art. Our work also demonstrates how we can tradeoff between precision and recall.

arXiv:1508.03371v1 [cs.SI] 13 Aug 2015

mimics reality. This differs from some previous studies which balance the data before conducting classification. Further, we note that we obtained prediction of order-of-magnitude increases in the size of the cascade - which also differs from other work (i.e. [1]) which focus on identifying cascades that double in size. II. T ECHNICAL P RELIMINARIES

I.

I NTRODUCTION

When a piece of information (microblog, photograph, video, link, etc.) starts to spread in a social network, an important question arises: will it spread to "viral" proportions ­ where "viral" is defined as an order-of-magnitude increase. Several previous studies [1], [2] have established that cascade size and frequency are related through a power-law - which leads to a severe imbalance in this classification problem. In this paper, we devise a suite of measurements based on "structural diversity" that are associated with the growth of a viral cascade in a social network. Structural diversity refers to the variety of social contexts in which an individual engages and is typically instantiated (for social networks) as the number of distinct communities represented in an individual's local neighborhood. Previously, Ugander et al. identified a correlation between structural diversity and influence [?]. We demonstrate these measures are able to distinguish viral from non-viral cascades, despite the severe imbalance of the data for this problem. Further, we leverage these measurements as features in a classification approach, successfully predicting microblogs that grow from 50 to 500 reposts with precision of 0.69 and recall of 0.52 for the viral class (under 2% of the samples). We note that our results on the prediction of cascades rely solely upon the use of our structural diversity based measures for features and limited temporal features - hence the prediction is based on network topology alone (no content information was utilized). We also achieved these results while maintaining the imbalances of the dataset - which we felt better
U.S. Provisional Patent 62/201,517. Contact shak@asu.edu for licensing information

Here we introduce necessary notation and describe our social network data. We represent a social network as a graph G = (V, E ) where V is the set of vertices and E as set of directed edges that have sizes |V |, |E | respectively. The intuition behind edge (v, v ) is that node v can influence v . This intuition stems from how we create the edges in our network: (v, v ) is an edge if during a specified time period there is at least one microblog posted by v that is reposted by v (we leave other thresholds beyond 1 repost to future work). We shall also assume a partition over nodes that specifies a community structure. We shall assume that such a partition is static (based on the same time period from which the edges were derived) and that the partition C consists of k communities: {C1 , C2 , ..., Ck }. There are many possible methods to derive the communities (if user-reported communities are not available). We utilize the Louvain algorithm to identify our communities in this paper due to its ability to scale. Cascades. For a given microblog , we denote the subset of first-m nodes who originally posted or reposted  as Vm and refer to them as adopters (at size m). Likewise, the set of reposting relationships within the same time period m . Taken together, we have a cascade: will be denoted R m m m D = (V , R ). Any valid original microblog  could be treated as a unique identifier for a cascade. Given a microblog , v is the originator at instance t0  , which is defined as the origin time when the originator posted the th repost microblog  and time t is time since t0  . The m m of the microblog  happens at time t . As m increases, a cascade accumulates nodes and edges over time. We shall use N to denote the final size of a cascade while the size of a cascade at any particular instance is the set of nodes present at that instance is simply |Vm |. For a given size m, we shall refer to the frontiers as the outgoing neighbors of the adopters in graph G who are not adopters themselves. Form mally: F = {v  V /Vm s.t. vi  Vm where (vi , v )  E }. For nodes in G that are outside the adopters, we shall use the notation texp (v, , m) to denote the number of time units from the initial post of  before the microblog was reposted by one of v 's incoming neighbors - intuitively the time at which v was exposed to . For a given natural number  (used to specify a time period), we define the  frontiers as a subset of the frontiers that have been exposed to 

no earlier than  time units previously. Formally this set m, m is defined as follows: F = {v  F |texp (v, , m)  }. Finally, the complement of this set are the  non-adopters: ¯ m, = {v  F m |texp (v, , m) > }. F   Sina Weibo Dataset. The dataset we used was provided by WISE 2012 Challenge1 . It included a sample of microblogs posted on Sina Weibo from 2009 to 2012. In this dataset, we are provided with time and user information for each post and subsequent repost which enabled us to derive a corpus of cascades. From this data, we derived our social network G = (V, E ) (with 17.9 M vertices and 52.4 M edges) that was created from reposts that were published during the 3 month period between May 1, 2011 and July 31, 2011. For this network, the average clustering coefficient is 0.107. There are 4974 connected components in the network. Louvain algorithm outputs 379,416 communities with average size of 47.5 for this network. As expected, this network exhibits a power-law degree distrubtion. For this network, the number of active nodes in August (the time period we studied for cascade prediction) is 5,910,608, while 5,664,625 of them at least have one out-neighbor. During the month of August, there were 9,323,294 reposts with 2,252,368 different original microblogs. 1,920,763 (86.6%) of them were written by authors who at least published one microblog during May 1, 2011 to July 31, 2011 (the time period we used to create the underlying network). The average time it took for viral cascades to become viral is approximately 18 hours. The distribution of final size of cascades mimics a power-law distribution which can demonstrate that this dataset is more representative of cascade behavior observed "in the wild". This differs significantly from the previous works which conduct biased sampling to artificially provide balanced classes. We selected  as 30 minutes as 90% of all reposts in the initial 3 month period occurred in under this time. Number of communities. For V  V , the associated communities C (V ) are the communities represented by V . Formally: C (V ) = {Ci  C s.t. V  Ci = }. The cardinality of this set (number of communities) will be denoted K (V ). We measure the number of communities represented by the above three m, ¯ m, ) observed populations of nodes: K (Vm ), K (F ), K (F  at either a given cascade size. Gini impurity. For V  V , the gini impurity, IG (V ) is the probability of a node in V being placed into the incorrect community if assigned a community based on the distribution of communities represented in V . Formally: IG (V ) = |Ci V | 1 - i ( |V | )2 . We study the gini impurity of the adopters,  non-adopters and  frontiers for either a given cascade size m, ¯ m, ). The intuition is to capture m: IG (Vm ), IG (F ), IG (F  a notion of how the communities are distributed amongst the nodes in each of these sets with a single scalar value. We note that the impurity of the adopter set IG (Vm ) behaves similar to the entropy of this set (a measurement introduced in [3]). However, as we will see in the next two sections, we found that the impurity of the  frontiers is a more discriminating feature. Overlap. For Va , Vb  V , the overlap (O(Va , Vb )) is simply the number of shared communities. Formally: O(Va , Vb ) =
1 http://www.wise2012.cs.ucy.ac.cy/challenge.html

|C (Va )  C (Vb )|. We study overlap between adopters and  frontiers, between adopters and  non-adopters, and between m, ¯ m, ),  frontiers and  non-adopters: O(Vm , F ), O(Vm , F  m, ¯ m, and O(F , F ) respectively. The intuition with overlap stems directly from the original structural diversity results of [?] - for instance a high overlap between adopters and  frontiers may indicate that the  frontiers are linked to adopters with inner-community connections and high structural diversity - hence increasing the probability of adoption. Average time to adoption. The average time to adoption for the nodes in the current set of adopters (once the cascade grows m i =1 t to size m): im . We also use average time to adoption as a baseline measure. III. R ESULTS

Here we examine the behavior of the various structural diversity measurements as viral and non-viral cascades progress. We define a cascade as viral if the number of reposts reaches a threshold (denoted T H ) of 500 (in the next section we will explore other settings for T H when describing our classification results). We look at snapshots of the cascades as they progress both in terms of size (denoted m). For m = {10, 30, 50, 100, 200}, the number of samples is {98832, 26733, 13285, 4722, 1324} respectively with 208 of the samples are viral. With each size m we consider the m Cascades with m adopters at some time tm  , t can vary for different . Hence, cascades with final size N < m are ignored in our analysis task. This leads to a decrease in the number of non-viral Cascades as m increases. Average time to adoption. As a baseline measurement, we study the average time to adoption for each size-based stage of the cascade process (Fig. 1i, Fig. 1j). As expected, viral cascades exhibit a faster rate of reposting. While we note that significant differences are present - especially in the early stages of the cascade, the whiskers of the non-viral class indicate a significant proportion of non-viral cascades that exhibit rapid adoption. We believe this is likely due to the fact that certain cascades may have very high appeal to specialized communities. Number of communities. Fig. 1a, Fig. 1b, Fig. 1c and Fig. 1d display how the number of communities K (V ) increases over m, m = {10, 30, 50, 100, 200} for the sets V = Vm , F . m We note that K (V ) (the communities represented in the set of adopters) was shown to be a useful feature in [3] for tasks where the target class had fewer reposts than in this study. Here, we note that while statistically significant differences exist, the average and median values at each of the examined stages are generally similar. On the other hand, the m, communities represented by the set of  frontiers (K (F )) shows viral Cascades have stronger capability than non-viral ones to keep a diverse set of  frontiers. We also noted that the ¯ m, ) (not pictured) shows viral cascades start median of K (F  m, with smaller K (F ). However, it increases faster in viral cascades as nodes in  frontiers becomes  non-adopters. Gini impurity. Cascades in both classes tend to accumulate diversity in the process of collecting more adopters - and we have also noted that a related entropy measure (studied in [3]) performed similarly. We also noted (not pictured) that in the

TABLE I: Features: Cascade Prediction over Time and Size
Group Feature(s) over size
m, ¯ m, ),IG (V m ),IG (F m, ),IG (F ¯ m, ), K (F ),K (F    

Am

m, m, ¯ m, m m ¯ m, O (V , F ),O (V , F ),O (F , F ), m, ¯ m, |, |F |, |F  m ti i=1  m

, m  {30, 50}

10

Bm Cm

Community Features Mentioned in [3] and Cm
m ti i=1  m

Number of Adopters

30

50

100

200

Number of Communities

70 60 50 40 30 20 10 0

M: 8.0 A: 7.7

18.0 17.5

25.0 24.0

35.0 34.9

48.0 47.6
70 60 50 40 30 20 10 0

Number of Communities

M: 8.0 A: 8.1

17.0 17.3

23.0 23.5

34.0 34.0

46.5 46.5

10

, m = 50

Number of Adopters

30

50

100

200

Number of Communities(102 )

Overlap. We found that overlap grows with the number of adopters in the three types of overlap considered. For m ), viral cascades start with a larger initial value O(Vm , F and keep leading non-viral ones in the diffusion process of first 200 nodes (Fig. 1e, Fig. 1f). This may hint that viral cascades also take advantage of the densely linked communities to help ¯ m ) and them become viral. However, in the case of O(Vm , F  m, ¯ m, O(F , F ), viral cascades begin with lower value but grow much faster than non-viral Cascades. Classification Experiments. Here we examine our experiments for predicting whether a cascade becomes viral - when a size threshold (T H ) exceeds 500 adopters given that the cascade has 50 adopters (s = 50). Based on the distribution of final size of cascades in this dataset, this is a binary classification task with two heavily imbalanced classes. Hence, we report performance measurements (precision, recall and F1 score) for only the minority (viral) class. Throughout the course of our experiments, we found that varying threshold (slightly modifying the definition of "viral") for only the training set allows for a trade-off between precision and recall. We study the trend of performance measures in two cases: (1.) The threshold for test set is maintained as T Hts = 500 while the training threshold is varied T Htr = {300, 400, 500, 600, 700}. (2.) The two thresholds are kept as the same T H while we modify this value T H = {300, 400, 500, 600, 700}. Table I shows the groups of features used in our prediction tasks. The features introduced in this paper is group Am . As a baseline method for size-based prediction (feature group Cm ) we used average time to adoption. We also compare our features (Group Am ) with the community features extracted in [3] (Group Bm ). This was the best performing feature set in that paper for a comparable task.2 Additionally, we study the average size of recalled and non-recalled viral cascades by classifiers using features in groups Am . We also investigate the significance and performance of individual and certain combinations of features introduced in this paper. We used ten-fold cross-validation in our experiments to
2 This was their highest-performing set of features for predicting cascades that grew from 50 to 367 and 100 to 417 reposts. We also included the baseline feature in this set as we found it improved the effectiveness of this approach.

10

Number of Adopters

30

50

100

200

Number of Communities(102 )

early stages, viral cascades can show more diversity in  fronm, tiers measured by IG (F ) (m = {10, 30, 50}). But, perhaps most striking, that non-viral Cascades gain more uniformly distributed nodes over communities in  non-adopters, shown ¯ m, ) (Fig. 1g, Fig. 1h). We believe that this is due to by IG (F  non-viral cascades likely have an appeal limited to a relatively small number of communities - hence those not adopting the trend may represent a more diverse set of communities.

(a) Number of communities amongst m )) for non-viral casadopters (K (V cades
M: 7.0 A: 25.7 15.0 39.6 20.0 53.2 27.0 33.0 88.5 111.1

(b) Number of communities amongst m )) for viral cascades adopters (K (V
M: 21.0 A: 24.3 30.0 41.7 30.0 44.4 33.5 78.7 42.5 88.6

1.4 1.2 1.0 0.8 0.6 0.4 0.2 0.0

1.4 1.2 1.0 0.8 0.6 0.4 0.2 0.0

10

Number of Adopters

30

50

100

200

(c) Number of communities amongst m,  frontiers (K (F )) for non-viral cascades
M: 3.0 A: 3.7 9.0 8.7 12.0 12.3 19.0 18.5 26.0 25.2

(d) Number of communities amongst m,  frontiers (K (F )) for viral cascades
M: 7.0 A: 6.7 13.0 12.7 17.0 16.5 22.5 22.2 31.0 29.5

60 50 40 30 20 10 0

60 50 40 30 20 10 0

Overlap

10

Number of Adopters

30

50

100

200

Overlap

10

Number of Adopters

30

50

100

200

(e) Overlap of adopters and  fronm , F m, )) for non-viral tiers (O(V  cascades
M: 0.8 A: 0.8 0.9 0.9 0.9 0.9 0.9 0.9 0.9 0.9

(f) Overlap of adopters and  fronm , F m, )) for viral castiers (O(V  cades
M: 0.0 A: 0.4 0.9 0.8 0.9 0.9 0.9 0.9 0.9 0.9

1.0 0.8

1.0 0.8

Gini

0.4 0.2 0.0 10

Gini
30 50 100 200

0.6

0.6

0.4 0.2

Number of Adopters

0.0

10

Number of Adopters

30

50

100

200

(g) Gini impurity of  non-adopters ¯ m, )) for non-viral cascades (IG (F 
M: 865.9 A: 780.3 853.1 804.5 754.6 765.2 790.1 771.0 753.8 759.9

(h) Gini impurity of  non-adopters ¯ m, )) for viral cascades (IG (F 
M: 15.3 A: 40.9 49.7 78.4 168.1 301.1 86.9 129.4 215.8 347.7

1.4 1.2 1.0 0.8 0.6 0.4 0.2 0.0

10

Number of Adopters

30

50

100

200

1.4 1.2 1.0 0.8 0.6 0.4 0.2 0.0

Average Time(103 )

Average Time(103 )

10

Number of Adopters

30

50

100

200

(i) Non-viral cascades

(j) Viral cascades

Fig. 1: Number of communities, gini impurity, overlap and average time since t0  to adoption for m = {10, 30, 50, 100, 200}

0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0.0 Precision

Am Bm

Cm

1.0 0.8 0.6 0.4

precision

recall

f1 score

Recall

F1 Score

0.2

300

Fig. 2: Classification results based on groups of features (Am ,Bm ,Cm ) extracted when m = 50 for fixed T Htr = 500, T Hts = 500. Error bars represent one standard deviation. ensure the results do not take any advantage of randomness in picking training and testing sets. First we carried out the prediction tasks with fixed thresholds T Htr = 500, T Hts = 500. Then we modify the training threshold T Htr = {300, 400, 500, 600, 700} to show how this achieves a trade-off between precision and recall. The difference in average final size between correctly classified viral cascades and incorrectly classified ones is also monitored over T Htr = {300, 400, 500, 600, 700} to show the potential to predict exact number of adopters by features. Furthermore, we modify threshold of both training and testing sets T H = {300, 400, 500, 600, 700} to show the robustness of our features on related classification problems. We used the oversampling method SMOTE with random forest classifier to generate synthetic samples for the viral class. Other, lesserperforming classifiers were also examined (including SVM, MLP, and other ensemble methods) and are not reported here. All results shown in this section is a sample mean produced by ten repeated experiments under each combination of variables. Size-based prediction. We studied cascades of size 50 that reached 500 for this task. There are 13,285 cascades that can reach the size m = 50 while 208 out of them reached the size of 500. Maintaining the threshold T H = 500, Fig. 2 shows random forest classifier trained with features in group Am can outperform the other groups. The trade-off between precision and recall can be achieved by changing the training threshold T Htr while maintaining the testing threshold (Fig. 3a). We also note that the average final size of viral cascades recalled by the classifier increases with the training threshold (Fig. 3b). With threshold T H = {300, 400, 500, 600, 700} on both training and testing samples, the features of group Am consistently outperform those previously introduced (Bm ) (Fig. 3c, Fig. 3d). Feature investigation. Here we investigate the importance of each feature in Am . With T Htr = 500 and T Hts = 500, we trained 100 randomized logistic regressions models - each assigning weights to the features in those sets. We then categorized the features with weight larger than 0.01 (on average) into groups such as overlap, gini impurity, etc. Then, we performed classification on the basis of single feature categories or combination of such categories. The average weights assigned are shown in Table II. As shown by these results, overlaps can make significant contribution to cascade prediction. Intuitively, communication between two sets of nodes is more likely to happen in their shared communities which is consistent with the results of [?]. This implies that the larger overlap value, the more influence of one set on the other. For example, we can infer that viral cascades tend to have

400 500 600 Training Threshold

700

1.4 recalled not recalled 1.3 1.2 1.1 1.0 0.9 0.8 0.7 0.6 300 400 500 600 Training Threshold

mean

Size (103 )

700

(a) Results for features in Am with (b) Average final size of viral cascades different T Htr . (recalled, mean and not recalled)
1.0 0.8 0.6 0.4 0.2 0.0 300 400 500 600 700 Training/Testing Threshold
precision recall f1 score

1.0 0.8 0.6 0.4 0.2

precision

recall

f1 score

0.0 300

400 500 600 700 Training/Testing Threshold

(c) Results for features in group Am (d) Results for features in group Bm when T Htr and T Hts change. when T Htr and T Hts change.

Fig. 3: Prediction results for Am when T Htr and T Hts change. Error bars represent one standard deviation.

Name Gini

Features
50, IG (F ) ¯ 50, ) IG (F  ¯ 30, ) IG (F  50 ti i=1  50

Weights 0.02 0.02 0.52 1.00

Name

Features
30, 30 O (V , F ) 30 ¯ 30, O (V , F )

Weights 0.50 0.04 0.23 0.50 0.26

Overlap

Baseline

  30, ¯ 30, O (F , F ) 50, 50 O (V , F ) 50, ¯ 50, O (F , F )

TABLE II: Weights of features assigned by randomized logistic regression models
m, larger O(Vm , F ) value for adopters have larger chance to influence the  frontiers than non-viral cascades. Moverover, the gini impurity of  non-adopters also shows its importance. Intuitively, non-viral cascades are easier to be trapped in a relatively small amount of communities. This means even if they could show up in people's timeline with high structural diversity but can not get them infected.

IV.

ACKNOWLEDGMENT

This work is supported through the AFOSR Young Investigator Program (YIP), grant number FA9550-15-1-0159. R EFERENCES
J. Cheng, L. Adamic, P. A. Dow, J. M. Kleinberg, and J. Leskovec, "Can cascades be predicted?" in Proceedings of the 23rd international conference on World wide web. International World Wide Web Conferences Steering Committee, 2014, pp. 925­936. [2] P. Shakarian, A. Bhatnagar, A. Aleali, R. Guo, and E. Shaabani, Diffusion in Social Networks. Springer (in press), 2015. [Online]. Available: http://lab.engineering.asu.edu/cysis/diffusion/ [3] L. Weng, F. Menczer, and Y.-Y. Ahn, "Predicting successful memes using network and community structure," in Eighth International AAAI Conference on Weblogs and Social Media, 2014. [1]

