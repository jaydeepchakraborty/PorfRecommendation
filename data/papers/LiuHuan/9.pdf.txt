See	discussions,	stats,	and	author	profiles	for	this	publication	at:	https://www.researchgate.net/publication/294421534

Protein	Inference:	A	Protein	Quantification
Perspective
Article		in		Computational	biology	and	chemistry	·	February	2016
DOI:	10.1016/j.compbiolchem.2016.02.006

CITATIONS

READS

2

85

6	authors,	including:
Zengyou	He

Ting	Huang

Dalian	University	of	Technology

Dalian	University	of	Technology

87	PUBLICATIONS			1,834	CITATIONS			

9	PUBLICATIONS			64	CITATIONS			

SEE	PROFILE

SEE	PROFILE

Peijun	Zhu

Ben	Teng

3	PUBLICATIONS			2	CITATIONS			

Dalian	University	of	Technology

SEE	PROFILE

6	PUBLICATIONS			14	CITATIONS			
SEE	PROFILE

Some	of	the	authors	of	this	publication	are	also	working	on	these	related	projects:

network	inference,	dense	subgraph	mining	View	project

All	content	following	this	page	was	uploaded	by	Zengyou	He	on	15	February	2016.
The	user	has	requested	enhancement	of	the	downloaded	file.	All	in-text	references	underlined	in	blue	are	added	to	the	original	document
and	are	linked	to	publications	on	ResearchGate,	letting	you	access	and	read	them	immediately.

Computational Biology and Chemistry 00 (2015) 1–14

COMPUT
BIOL
CHEM

Protein Inference: A Protein Quantiﬁcation Perspective
Zengyou Hea,b,∗, Ting Huangc , Xiaoqing Liua , Peijun Zhua , Ben Tenga , Shengchun Dengd
a School of Software, Dalian University of Technology, Dalian, China.
Laboratory for Ubiquitous Network and Service Software of Liaoning, Dalian, China.
c College of Computer and Information Science, Northeastern University, USA.
d School of Computer Science and Engineering, Harbin Institute of Technology, China.

b Key

Abstract
In mass spectrometry-based shotgun proteomics, protein quantiﬁcation and protein identiﬁcation are two major
computational problems. To quantify the protein abundance, a list of proteins must be ﬁrstly inferred from the raw
data. Then the relative or absolute protein abundance is estimated with quantiﬁcation methods, such as spectral
counting. Until now, most researchers have been dealing with these two processes separately. In fact, the protein
inference problem can be regarded as a special protein quantiﬁcation problem in the sense that truly present proteins
are those proteins whose abundance values are not zero. Some recent published papers have conceptually discussed
this possibility. However, there is still a lack of rigorous experimental studies to test this hypothesis.
In this paper, we investigate the feasibility of using protein quantiﬁcation methods to solve the protein inference
problem. Protein inference methods aim to determine whether each candidate protein is present in the sample
or not. Protein quantiﬁcation methods estimate the abundance value of each inferred protein. Naturally, the
abundance value of an absent protein should be zero. Thus, we argue that the protein inference problem can be
viewed as a special protein quantiﬁcation problem in which one protein is considered to be present if its abundance
is not zero. Based on this idea, our paper tries to use three simple protein quantiﬁcation methods to solve the
protein inference problem eﬀectively. The experimental results on six data sets show that these three methods
are competitive with previous protein inference algorithms. This demonstrates that it is plausible to model the
protein inference problem as a special protein quantiﬁcation task, which opens the door of devising more eﬀective
protein inference algorithms from a quantiﬁcation perspective. The source codes of our methods are available at:
http://code.google.com/p/protein-inference/.
c 2016 Published by Elsevier Ltd.
°
Keywords: Shotgun proteomics, Protein inference, Protein quantiﬁcation, Spectral counting, Linear programming.

1. Introduction
Mass spectrometry (MS)-based shotgun proteomics is currently the most widely used method for the
identiﬁcation and quantiﬁcation of proteins (Nesvizhskii et al., 2007). As shown in Figure 1, it ﬁrst digests
proteins in the sample into a mixture of peptides by enzymes such as trypsin. The resulting peptide mixtures
are scanned by tandem mass spectrometry (MS/MS) to generate a set of MS/MS spectra. Then the peptide
identiﬁcation algorithm reports a set of peptide-spectrum matches (PSMs) by searching the MS/MS spectra
∗ Corresponding

author. Tel.: +86 411 62274405. E-mail address: zyhe@dlut.edu.cn (Z. He)

1

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

2

#4/5-6164001
0-78,*4

!" #$

)*+,-./01 213

)-7,.5-1
6.9,:*-

%&#'(
;

!"#$%

3
<)##=( )21%#!-,
!-.#2#-/#

&'(&'
)#*%!+#,
!+#-%!.!/0%!1-

340-%!.!/0%!15&'(&',$*#/%206,
/14-%$7

Figure 1: Protein identiﬁcation and quantiﬁcation using mass spectrometry in shotgun proteomics. There
are three major computational problems: peptide identiﬁcation, protein inference and protein quantiﬁcation.
against a protein database. From these peptide identiﬁcations, we infer the existence of proteins with protein
inference algorithms and calculate the relative or absolute abundances of proteins with protein quantiﬁcation
approaches.
Until recently, people tackle the identiﬁcation and quantiﬁcation of proteins as two individual and subsequent tasks: ﬁrst select a subset of proteins that are truly present and then determine the quantities of
these proteins. For both problems, many elegant approaches have been developed in the past decades. The
readers can refer to two recent reviews Huang et al. (2012) and Nikolov et al. (2012) for details.
The starting point of this paper is fact that protein inference can be regarded as a special case of protein
quantiﬁcation. In protein inference, the objective is to generate a binary presence indicator value (1 or
0) for each candidate protein. In this regard, “protein existence inference” is probably more accurate for
describing the original protein inference task. In protein quantiﬁcation or “protein abundance inference”,
the goal is to determine the abundance of each protein. Clearly, if one protein is not present, its abundance
value should be 0. Hence, the protein inference problem can be investigated from the perspective of protein
quantiﬁcation: present proteins are those proteins whose abundance values are not zero. In other words, we
can adopt available protein quantiﬁcation methods directly to solve the protein inference problem. This new
angle may enable a better understanding of the protein inference problem and help in devising improved or
hybrid protein inference methods by borrowing the power from protein quantiﬁcation.
The possibility of exploiting protein quantiﬁcation methods to solve the protein inference problem has
been conceptually discussed in several papers (Dost et al., 2012; Li and Radivojac, 2012). Dost et al. (2012)
used a simple example to show that it is feasible to obtain more accurate protein identiﬁcations with protein
quantiﬁcation methods than traditional parsimonious approaches. Li and Radivojac (2012) also pointed out
that the protein inference problem can be regarded as a special protein quantiﬁcation problem. However,
they argued that existing protein quantiﬁcation methods have not yet reached the accuracy needed for the
wide dynamic range of quantities observed in cellular proteomics. As a result, solving the more general and
diﬃcult quantiﬁcation problem may not provide a more accurate solution for the protein inference problem.
Although people have realized the potential of solving the protein inference problem from a quantiﬁcation perspective, there are still no rigorous and extensive experimental studies to test this hypothesis.
To fulﬁll this void, we empirically demonstrate the feasibility of solving the protein inference problem with
existing protein quantiﬁcation methods in the context of label-free proteomics. In the label-free quantitative proteomics studies, quantiﬁcation methods which are based on peak ion intensities (from MS data)
(Neilson et al., 2011) and spectral counting (from MS/MS data) (Lundgren et al., 2010; Choi et al., 2008)
have been widely used.
2

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

3

Spectral counting measures the abundance of each protein based on the number of MS/MS spectra
that match its constituent peptides. Given the peptide identiﬁcation result, we can directly obtain spectral
counting information since we just need to count the number of MS/MS spectra. In this paper, we use
spectral counting as the quantiﬁcation approach for solving the protein inference problem.
We ﬁrst try two simple spectral counting methods in the literature. In both methods, the protein
abundance is calculated as the sum of peptide abundance values. Their diﬀerence lies in how to handle the
shared peptide. If the abundance of one shared peptide is b and it has k parent proteins, then b is used as its
abundance value in the ﬁrst method while b/k is used as its abundance value in the second method. These two
methods assume that all the candidate proteins are present in the sample. As a result, the abundance value
of each candidate protein will not be zero. However, this assumption contradicts the objective of protein
inference: distinguishing present proteins (abundance6=0) from absent proteins (abundance=0). Thus, we
extend the second linear programming model in (Dost et al., 2012) to distribute the abundance values of
shared peptides automatically in order to shrink the abundance values of absent proteins to zero.
To our knowledge, our paper is the ﬁrst rigorous study with extensive experiments to demonstrate
the feasibility of using protein quantiﬁcation methods for solving the protein inference problem. Such an
attempt connects two important computational problems that have long been investigated separately. The
experimental results show that we can obtain better performance in most data sets even when the most
simple version of spectral counting is utilized. Hence, the advance in protein quantiﬁcation studies will
promote the development of more eﬀective protein inference algorithms.
In Section 2, we describe the details of three methods. Section 3 shows the experimental results on six
data sets. Section 4 presents some discussions and Section 5 concludes the paper.
2. Methods
As shown in the left side of Figure 2, the input of the protein inference problem can be represented as
a tripartite graph G = (X ∪ Y ∪ Z, E1 ∪ E2 ), where X, Y and Z are the set of l MS/MS experimental
spectra, m identiﬁed peptides and n candidate proteins, respectively. For all xi ∈ X, yj ∈ Y , there is an
edge (xi , yj ) ∈ E1 if and only if the spectrum xi matches the peptide yi in the peptide identiﬁcation results.
Similarly, (yj , zk ) ∈ E2 means that the peptide yj is one part of the protein zk . Each MS/MS spectrum
corresponds to one and only one identiﬁed peptide whereas some peptides may have more than one matching
spectrum, such as the peptides y2 and y3 in Figure 2. The relationship between peptides and proteins is
more complex: one candidate protein may have several identiﬁed peptides and each peptide can be shared by
multiple proteins. How to correctly distribute these shared peptides is one of the most challenging problem
in protein inference.
We ﬁrst formulate the protein inference problem as a special protein quantiﬁcation problem. The objective of protein inference is to determine whether each candidate protein is present in the sample. The aim of
protein quantiﬁcation is to estimate the abundance value of each identiﬁed protein. Clearly, if one protein
is not present in the sample, its abundance value should be 0. In this paper, the protein inference problem
is re-visited from the perspective of protein quantiﬁcation through seeking those proteins whose abundance
values are not zero.
To obtain the protein abundance, we start with calculating the peptide abundance. Let bj denote the
abundance value of the peptide yj , which can calculated as the sum of PSM probabilities (or scores):
∑
bj =
ai ,
(1)
(xi ,yj )∈E1

where ai is the probability that the spectrum xi matches the peptide yj . Notice that ai can be also viewed
as the weight of edge (xi , yj ) ∈ E1 , which can be obtained from peptide identiﬁcation algorithms such
as Mascot (Perkins et al., 1999) or post-processing tools such as PeptideProphet (Keller et al., 2002). In
the traditional spectral counting methods, the peptide abundance is simply the number of MS/MS spectra
identiﬁed for each peptide. Here, we generalize this spectral counting method to account for the quality of
PSMs. More precisely, the contribution of each spectrum to the peptide abundance becomes a quantitative
3

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14
:4-;,*<
6!

)-4,.5-0
%!

)*+,-./0

4

'!(
$

!

%$
#

6$
$

6#

'$(

%$

6"

%$

$

%$

#

#

6&
%#
67
68

"

'#(

%"

%$

&

69

%&

123$

$

123$
#

Figure 2: Three approaches for solving the shared peptide problem. y1 and y3 are unique peptides while y2 ,
y4 and y5 are shared peptides. The abundance of peptide yj is represented by bj . We use the peptide y2 as
an example to explain how these three approaches work.
value between 0 and 1 rather than a ﬁxed value of 1. Such an extension is extremely important for protein
inference since it may help us to distinguish between the proteins with the same number of PSMs.
To calculate the protein abundance, we need to distribute the abundance of each peptide to its parent
proteins. The main diﬃculty is how to deal with the degenerate peptide that is shared by more than one
protein since such a peptide can be generated by any subset of its parent proteins (Yang et al., 2013).
There are several approaches for solving the shared peptide problem in protein quantiﬁcation (Zhang et al.,
2010), as shown in the right side of Figure 2. The ﬁrst approach is to simply discard the shared peptides and
only use the unique peptides to calculate the protein abundance. But this approach has one disadvantage:
it causes the loss of information, especially for the proteins whose identiﬁed peptides are all shared peptides.
In Figure 2, if we delete the shared peptide y2 , then the proteins z2 and z3 do not have any identiﬁed
peptides and they would be considered absent in the sample. In fact, at least one of these two proteins
must be present if we assume the existence of peptide y2 . Alternatively, we can use both unique and shared
peptides to estimate the protein abundance. In the second approach, the abundance of the shared peptide
is utilized to calculate the abundance of all its parent proteins. In other words, each peptide is counted
multiple times so that the abundance values of some proteins may be over-estimated. We call this method
“multiple counting” in this paper. For example, the peptide y2 in Figure 2 is counted twice in the second
approach, which means that we artiﬁcially increase the abundance of peptide y2 from b2 to 2 ∗ b2 . The third
approach divides the abundance of the shared peptide into diﬀerent parts and then distributes each part to
one of its parent proteins. This approach ensures that each peptide is “counted” only once. One typical
representative in this category is the “equal division” method, which partitions the peptide abundance into
k equal parts (k is the number of proteins that share this peptide).
Since both multiple counting and equal division are the most popular and simple quantiﬁcation approaches based on spectral counting, we ﬁrst try these two methods and test their performance for the
protein inference task. Note that these two methods have an implicit assumption that the abundance value
of each candidate protein is not zero. However, this assumption does not hold in the context of protein inference since the abundance values of some absent proteins should be zero. Thus, a new linear programming
model is proposed, which can automatically distribute the peptide abundance so as to shrink the abundance
values of some proteins to zero.

4

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

5

2.1. Multiple Counting
In this method, the shared peptides are used in the same way as the unique peptides and receive no
special treatment. The abundance of a protein is simply the sum of abundance values from all its identiﬁed
peptides:
∑
ck =
bj ,
(2)
(yj ,zk )∈E2

where ck is the abundance of protein zk . If the peptide yj has qj parent proteins, then it is counted qj times
and its actual abundance value used in the calculation is qj · bj .
2.2. Equal Division
Diﬀerent from the above method that counts shared peptides multiple times, the equal division method
counts each peptide only once. It equally distributes the abundance of each shared peptide to its parent
proteins:
∑
bj
ck =
,
(3)
qj
(yj ,zk )∈E2

where qj is the number of candidate proteins sharing the peptide yj . If the peptide yj is a unique peptide,
then qj = 1.
2.3. Linear Programming Model
Shared peptides play an important role in both protein inference and protein quantiﬁcation. Dost et al.
(2012) presented a linear programming (LP) model which used shared peptides to estimate the relative
protein abundance. Kim (2012) modiﬁed this LP model to qualify the absolute protein abundance. On the
basis of these attempts, we further extend the LP model and apply it to infer the identities of proteins.
For each identiﬁed peptide yj , the peptide abundance can be computed as:
∑
∑
bj =
detjk · ck =
djk ,
(4)
{k|(yj ,zk )∈E2 }

{k|(yj ,zk )∈E2 }

where detjk ∈ (0, 1) is the detectability of the peptide yj and it represents the probability that the peptide
yj can be identiﬁed in a standard experiment if its parent protein zk is present (Tang et al., 2006). In
order to simplify the model, we introduce a new variable djk to replace the product between the peptide
detectability detjk and the protein abundance ck . Then, djk is interpreted as the abundance that the protein
zk contributes to the peptide yj . The variable djk can serve as the bridge between the peptide abundance and
the protein abundance. On one hand, we can use djk to explain the known peptide abundance. On the other
hand, we can calculate the unknown protein abundance through djk . Therefore, the protein quantiﬁcation
problem is equivalent to ﬁnding an optimal matrix D = (djk ).
According to the above analysis, we propose a new LP model to solve the protein quantiﬁcation problem:
min

tk ,

(5)

djk = 0,

(6)

∀j, k : djk ≤ tk ,

(7)

D

∑

∀j : bj −

n
∑
k=1

{k|(yj ,zk )∈E2 }

∀j, k : djk

{
=0
∼
≥0

if (yj , zk ) ∈
/ E2
else

.

(8)

Constraint (6) forces the predicted peptide abundance to be equal to the observed abundance value.
Constraint (7) is to ﬁnd the maximum value in each column vector dk (the kth column of the matrix D).
5

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

6

Then, minimizing the objective function (the sum of maximum peptide abundance value from each protein)
will shrink the abundance values of some proteins to 0.
After obtaining the matrix D, it is still a non-trivial task to recover the
∑ protein abundance value ck
since the peptide detectability value detjk is unknown. If we assume that {j|(yj ,zk )∈E2 } detjk = 1, then
the protein abundance ck can be calculated as:
∑
∑
ck =
detjk · ck =
djk .
(9)
{j|(yj ,zk )∈E2 }

{j|(yj ,zk )∈E2 }

Notice that the above assumption on the sum of peptide detectability values is generally not true.
Therefore, the calculated value according to Equation (9) is only an estimated value of the true protein
abundance.
Previously, we have introduced a linear programming method, ProteinLP (Huang and He, 2012), to solve
the protein inference problem. The LP model presented in this paper is essentially diﬀerent from ProteinLP
at least in the following ways:
• Our paper is based on the idea that the protein inference problem can be solved as a special protein
quantiﬁcation problem. Here we want to show the possibility of using protein quantiﬁcation methods
to address the protein inference problem. Thus, the LP method in this paper is actually a special
protein quantiﬁcation method, which mainly deals with peptide/protein abundance values. While
ProteinLP focuses on calculating the protein existence probability based on the peptide identiﬁcation
probability values.
• These two methods have diﬀerent assumptions. ProteinLP assumes that one peptide will be absent
if all its parent proteins are not present in the sample. The LP model in this paper is based on the
assumption that the abundance value of a peptide is equal to the sum of the abundance values from
all its parent proteins.
• The variables in these two LP models are diﬀerent. The variable of ProteinLP is a mathematical
transformation of the joint probability that both a protein and its constituent peptide are present in
the sample. The variable in this paper is the abundance that one parent protein contributes to its
constituent peptide.
• The outputs of these two methods are diﬀerent. The output of ProteinLP is the probability that one
protein is present while that of our method is the protein abundance.
• The new LP model does not need any parameters while ProteinLP has to specify a threshold parameter
manually. In order to ﬁnd the proper parameter automatically, ProteinLP still needs to run an
additional parameter selection procedure.
2.4. Converting Scores into Probabilities
After knowing the protein abundance, it is beneﬁcial to convert the abundance into well-calibrated
probability. The main reason is that the probability estimation allows us to select the appropriate threshold
for reporting a set of conﬁdent proteins. In fact, the problem of converting ranking scores into estimated
probabilities has been widely investigated in diﬀerent domains (e.g., Gao and Tan (2006)). In this paper,
we use the method proposed in (Gao and Tan, 2006) to fulﬁll this task.
We ﬁrst estimate the probability pk that the protein zk is present in the sample given its abundance ck :
P r(zk = 1|ck )
P r(ck |zk = 1)P r(zk = 1)
P r(ck |zk = 1)P r(zk = 1) + P r(ck |zk = 0)P r(zk = 0)
1
=
,
1 + exp(−fk )
=

6

(10)

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

where
fk = log

P r(ck |zk = 1)P r(zk = 1)
.
P r(ck |zk = 0)P r(zk = 0)

7

(11)

fk can be considered as a discriminant function which has a Gaussian distribution with equal covariance
matrices (Bishop, 1995). Then, Equation (10) becomes
pk =

1
.
1 + exp(Ack + B)

(12)

Now, we need to estimate the parameters, A and B. Let rk be a binary variable whose value is 1 if the
protein zk is present in the sample and 0 otherwise. Then, R = (r1 , r2 , · · · , rn ) is the presence indicator
vector of n candidate proteins. If we assume that the existence of each protein is independent of other
proteins, the probability of observing R given C is:
P r(R|C) =

n
∏

prkk (1 − pk )1−rk ,

(13)

k=1

where C = {c1 , c2 , · · · , cn }. The optimal parameter values should maximize P r(R|C), i.e., minimize the
following negative log likelihood function:
LL(R|C) =

n
∑

[(1 − rk )(−Ack − B) + log(1 + exp(Ack + B))].

(14)

k=1

Equation (14) is based on the assumption that we have already known the indicator vector R. However,
we do not know such information in the protein inference process. Thus, we consider rk s as hidden variables
and employ the EM algorithm to simultaneously estimate A, B and R.
The EM algorithm utilizes an iterative procedure to estimate the parameter value θ = {A, B}. The
procedure includes two steps: set rks+1 = E(rks |C, θs ) (E-step) and compute θs+1 = arg minθ LL(Rs+1 |C)
(M-step), where s is the iteration index. During the E-step, the unknown vector R is replaced by its expected
value Rs+1 under the current estimated parameter value θs . Since θs is ﬁxed, LL(R|C) is minimized by
setting rk = 0 if Ack + B > 0 or rk = 1 if Ack + B ≤ 0. During the M-step, a new parameter estimation θs+1
is computed by minimizing LL(R|C) given the vector Rs+1 calculated by the ﬁrst step. Since Rs = [rks ] is
ﬁxed, minimizing LL(R|C) with respect to A and B is a two-parameter optimization problem, which can
be solved using the model-trust algorithm described in (Platt, 2000).
In the above score transformation procedure, all proteins share the same set of model parameters. In fact,
the estimated abundance values from diﬀerent proteins are generally not comparable since longer proteins
may tend to have more matched mass spectra than shorter proteins even they have the same quantities.
Therefore, a new model that takes into account more factors such as the length and ionization properties of
proteins should be developed in the future.
3. Experimental Results
To test the performance of quantiﬁcation-based protein inference methods, we have compared our methods with ProteinProphet (Nesvizhskii et al., 2003) and ProteinLP (Huang and He, 2012) on the six datasets.
3.1. Data sets
We choose six publicly available data sets to validate the performance of our methods. The names and
URLs of these data sets are given in Table 1. These six data sets are divided into two categories: three data
sets with reference sets and the other three data sets without reference sets. The ﬁrst three data sets, 18
mixtures (Klimek et al., 2008), Sigma49 (Tabb et al., 2007) and yeast (Ramakrishnan et al., 2009a), have
their corresponding reference sets that contain the ground-truth proteins. The another three data sets, DME
(Brunner et al., 2007), HumanMD (Ramakrishnan et al., 2009b) and HumanEKC (Ramakrishnan et al.,
7

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

8

2009a), do not have such reference sets. For the data sets without reference sets, a target-decoy strategy
is used instead to assess the performance. This strategy searches MS/MS spectra against a hybrid protein
database which is composed of target protein sequences from the original database and the same number
of decoy sequences (Teng et al., 2014). Thus, an identiﬁed protein is considered as a true positive if it is
present in the protein reference set or comes from the target protein database.
Mixture of 18 Puriﬁed Proteins (18 mixtures) and Sigma49 data set. These two data sets
are both generated from the sample of synthetic proteins mixtures. The protein database used for the 18
mixtures data set consists of 1,819 protein sequences, which includes 18 ground-truth proteins and some
contaminant proteins. The database for the Sigma49 data set contains 15,682 Swiss-Prot human protein
sequences.
Yeast data set. Its reference set is available at http://www.marcottelab.org/MSdata/gold/yeast.html.
The protein database includes 6,714 protein sequences.
D. melanogaster data set (DME). The DME data set is produced from the embryonal Kc 167 cell
line of D. melanogaster. We use Flybase (release 5.2) as the protein database, which contains 20,726 entries.
HumanMD data set and HumanEKC data set. The HumanMD data set is generated from
medulloblastoma Daoy cell line and the HumanEKC data set is produced from human embryonic kidney
T293 cell line. We use Ensembl (version 49.36k) as the protein database, which has 22,997 entries.
Table 1:

The data sets used in the experiment and their URLs.

Data Set

The URL of Raw Data

Mixture of 18 Puriﬁed Proteins (Klimek et al., 2008)

http://regis-web.systemsbiology.net/PublicDatasets/

Sigma49 Data Set (Tabb et al., 2007)

https://proteomecommons.org/dataset.jsp?i=71610

Yeast Data Set (Ramakrishnan et al., 2009a)

http://www.marcottelab.org/users/MSdata/Data_02/

D. melanogaster Data Set (Brunner et al., 2007)

http://www.peptideatlas.org/repository/ (PAe001349)

HumanMD Data Set (Ramakrishnan et al., 2009b)

http://www.marcottelab.org/MSdata/Data_05/

HumanEKC Data Set (Ramakrishnan et al., 2009a)

http://www.marcottelab.org/MSdata/Data_07/

3.2. Peptide Identiﬁcation
We use X!Tandem (v2010.10.01.1) (Craig and Beavis, 2004) for peptide identiﬁcation with default search
parameters. For the data sets with the reference sets, the MS/MS spectra are only searched against the target
protein databases. For the data sets without the reference sets, the spectra are searched against both target
and decoy protein databases. The peptide identiﬁcation results are post-processed with PeptideProphet
(Trans-Proteomic Pipeline v4.5) to obtain the presence probability for each peptide.
3.3. Protein Inference
We choose ProteinProphet and ProteinLP as the competing methods. ProteinProphet is the most
popular method for protein inference so far. ProteinLP is one representative method that is also based on
linear programming. We run ProteinProphet with its default parameter setting and run ProteinLP with
parameter ² = 0. Since some distinct proteins may have the same set of identiﬁed peptides, we cannot
distinguish these proteins from each other without further evidence. Therefore, all the protein inference
methods in the experiments will put these indistinguishable proteins into the same group. Each group of
indistinguishable proteins is treated as a single protein during the protein inference procedure. When we
evaluate the performance of diﬀerent methods, we count all proteins in each group and use the presence
probability of each group as the identiﬁcation probability for proteins in that group.
3.4. Results
We use the curve that shows the number of true positives as a function of the q-value to assess the
performance of diﬀerent methods. Given a certain probability threshold t, the q-value is the minimal
false discovery rate (FDR) that is reported for a protein: qt = mint0 ≤t F DRt0 . The FDR is estimated
8

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

9

Sigma49

18 mixtures

45

20

Number of true positives

Number of true positives

40
15

10
PQ−1
PQ−2
5

PQ−3
PLP

35
30
25
20
PQ−1
15

PQ−2

10

PQ−3
PLP

5

PP
0

PP

0
0

0.1

0.2

0.3

0.4

0.5

0

0.05

0.1

0.15

q−value

0.2
q−value

0.3

0.35

800

1000

700

800
600
PQ−1
400

PQ−2

200

PQ−3
PLP

600
500
400
PQ−1

300

PQ−2
200

PQ−3
PLP

100

PP

PP

0
0

0.02

0.04

0.06

0.08

0.1

0
0

0.02

0.04

q−value

0.06

0.08

0.1

q−value

HumanMD

HumanEKC

350

700

300

600

250
200
150

PQ−1

100

PQ−2

50

PQ−3
PLP

Number of true positives

Number of true positives

0.4

DME

1200

Number of true positives

Number of true positives

Yeast

0.25

500
400
300

PQ−1

200

PQ−2

100

PQ−3
PLP

PP

PP

0

0
0

0.02

0.04

0.06

0.08

0.1

q−value

0

0.005

0.01

0.015
q−value

0.02

0.025

0.03

Figure 3: The comparison of identiﬁcation performance among ProteinLP (PLP), ProteinProphet (PP) and
our own three methods: multiple counting (PQ-1), equal division (PQ-2) and linear programming (PQ-3).
If some proteins have the same probability in the ordered protein list, we skip these proteins with the same
probability and calculate the q-value at the ﬁrst encountered protein with a diﬀerent probability.
as F DRt0 = Ft0 /(Ft0 + Tt0 ), where there are Tt0 true positives (TPs) and Ft0 false positives (FPs) with
0
probabilities ≥ t .
Figure 3 displays the number of TPs reported by the ﬁve methods at diﬀerent q-values. It shows that
our methods are competitive with available protein inference algorithms. Throughout the six data sets,
our three methods can always achieve zero FPs among the highest ranking proteins while the other two
algorithms do not have such a property. This fact indicates that our methods have more strong distinction
power than existing methods. More speciﬁcally, we have the following important observations.
9

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

10

First, the multiple counting method is the best performer on the HumanMD and HumanEKC data sets.
For the HumanMD data set, it reports the largest number of TPs when the q-value is equal to 0. For
the HumanEKC data set, it just identiﬁes 17 fewer true positives than ProteinProphet at q-value=0. Even
though the multiple counting method does not keep such excellent performance on the 18 mixtures, Sigma49
and DME data sets, it never performs the worst.
Second, equal division is the best performer (or tied with other algorithms) on the 18 mixtures, Sigma49
and yeast data sets. Similarly, when the q-value is equal to 0, it identiﬁes the more TPs than other methods
on the 18 mixtures, Sigma49 and yeast data sets. For the HumanMD data set, equal division does not have
the worst performance. For the HumanEKC data set, the curve of equal division is almost tied with the
curve of our LP model, ProteinProphet and ProteinLP and the gaps among these four methods are very
small.
Third, our LP model exhibits the most stable identiﬁcation performance among these ﬁve methods.
More precisely, it does not perform the worst across all six data sets. ProteinLP also has such a property,
but its performance is worse than three algorithms on the 18 mixtures and Sigma 49 data sets. In contrast,
there is only one time that the performance of our LP model is worse than three algorithms (on the DME
data set). The other three methods perform the worst on at least one data set. The number of data sets is
1, 2, 3 for multiple counting, equal division and ProteinProphet, respectively.
In the calculation of protein abundance, we generalize the number of MS/MS spectra to the sum of PSM
probabilities. We wish such an extension may help us to distinguish between proteins with the same number
of PSMs and further improve the identiﬁcation performance. Figure 4 describes the performance gain when
the generalized spectral counting is used instead of the traditional spectral counting. The experimental
results of these three methods on the six datasets agree with our expectation: using the sum of PSM probabilities actually performs better than using the number of PSMs. Overall, there are 18 comparison results
since we run our three methods on the six data sets. In these comparisons, the generalized spectral counting
method performs obviously better than traditional spectral counting in 13 comparisons and performs as well
as traditional spectral counting method in the remaining 5 comparisons.
The LP model in this paper is expected to be able to shrink the abundance values of some proteins to
zero. Table 2 shows the eﬀect of shrinkage on the six data sets. We record the number of total candidate
proteins, the number of the proteins whose abundance values are zero and their rate. For the ﬁrst two data
sets generated from simple protein mixtures, there are around 4% proteins with abundance=0 while the
proportion becomes 7% ∼ 8% for the remaining four data sets generated from real samples.
Table 2:

The eﬀect of shrinkage. The percentage of proteins with abundance=0 is deﬁned as the quotient between the

number of proteins with abundance=0 and the number of total candidate proteins.
Number of total candidate proteins
Number of proteins with abundance=0
Percentage of proteins with abundance=0

18 mixtures

Sigma49

Yeast

DME

HumanMD

HumanEKC

49

105

1285

907

414

669

2

4

91

66

34

50

4.1%

3.8%

7.1%

7.3%

8.2%

7.5%

After obtaining the protein abundance, we use an EM algorithm to convert the abundance score into
a well-calibrated probability. Alternatively, we can just normalize the protein abundance by dividing the
maximum of all calculated protein abundance values. The second strategy also gives us a protein score
between 0 and 1 and keeps the holistic distribution of the original protein abundance unchanged. Figure 5
shows the reason why we adopt the more complex probability estimation approach. In this ﬁgure, the
distributions of new scores generated from these two transformation methods are depicted. It is clearly
visible that the probability estimation method is capable of generating a score distribution that is more
close to the uniform distribution than the simple normalization method. This means that the probability
estimation method allows for distinction between diﬀerent proteins on a ﬁne level.

10

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

18 mixtures

18 mixtures

18 mixtures

20

20

20

15

15

15

10

10

10

5

PQ−1

5

PQ−2

NPQ−1

5

0
0.2

40

40

30

30

20

20

0

0.2

0.4

0

Yeast

Sigma49

0.2

PQ−2

10

NPQ−2

NPQ−1

0

0.4

PQ−1

10

NPQ−3

0
0

Sigma49

Sigma49

PQ−3

NPQ−2

11

0

0

0.4

0

Yeast

0.2

0.4

0

0.2

0.4

DME

Yeast

400
1000

40

600

1000

PQ−1

300

NPQ−1

30
400
200

20
PQ−3

10

500

100

NPQ−3

PQ−2

NPQ−1

0
0.2

0.4

DME

0.02

0.04

200

0
0.02

0

0.04

HumanMD

0.02

0.04

HumanMD

300

300

200

200

200

100

0

0.04

0.02

0.04

600

400

400

400

0.02

0.04

PQ−3
NPQ−3
0

0

0.02

0.04

0

0.02

0.04

PQ−3

PQ−2

NPQ−1
0.01

NPQ−2

200

200

0

NPQ−1

HumanEKC

HumanEKC

PQ−1

100
PQ−2

0
0

600

200

100
PQ−1

0
0

HumanEKC

0.005

0.02

300

600

0

0

HumanMD

NPQ−3

400

100

0

0.04

PQ−3

NPQ−2

200

0.02

DME
600

PQ−2

0

0
0

200

NPQ−3

0
0

300

PQ−3

NPQ−2

0
0

500

PQ−1

NPQ−3

NPQ−2
0

0
0

0.005

0.01

0

0.005

0.01

Figure 4: The comparison of identiﬁcation performance between the generalized spectral counting methods
(PQ-1, PQ-2, PQ-3) and the traditional spectral counting methods (NPQ-1, NPQ-2, NPQ-3). The y-axis
is the number of true positives and x-axis is the corresponding q-value (the minimum FDR to report these
proteins). The abbreviations for diﬀerent methods are the same as those in Figure 3.

11

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

18 mixtures

Sigma49

1

Yeast

1

0.8

1

NS

NS

PE

PE

0.8

NS

Score

Score

0.6

0.4

0.4

0.4

0.2

0.2

0.2

0
10

20

30

40

0

50

0

20

Index

40

60
Index

80

100

0

120

0

0.6
Score

Score

Score
0.4

0.4

0.4

0.2

0.2

0.2

800

1200

PE

0.8

0.6

600

1000

NS

PE

0.8

0.6

400
Index

800

NS

PE

0

600
Index

HumanEKC

NS
0.8

400

1

1

200

200

HumanMD

DME
1

0

PE

0.8

0.6

Score

0.6

0

12

0

0
0

100

200
Index

300

400

0

200

400
Index

600

800

Figure 5: The comparison of the score distribution between normalized score (NS) and probability estimation
(PE) when the protein abundance value is generated with the LP model. The scores of all the identiﬁed
proteins are sorted by descending order.

12

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

13

4. Discussions
There have been already more than 20 protein inference algorithms in the literature, whose details are
summarized in several reviews (Huang et al., 2012; Li and Radivojac, 2012; Claassen, 2012). Here we only
discuss two inference methods that are most closely related with our work.
Based on the observation that peptides belonging to the same protein will show a good correlation with
respect to their quantiﬁcation patterns, Lukasse and America (2014) used the correlation of these patterns
to validate peptide to protein matches. BagReg (Zhao et al., 2015) is a learning-based method for protein
inference, which built a classiﬁcation model based on several features such as the number of matched spectra
for each protein. Overall, both methods utilized the quantiﬁcation information in their algorithms rather
than modeled the protein inference problem as a protein quantiﬁcation problem.
The correct assignment of shared peptides to their parent proteins is one of most challenging problems
in protein inference. However, it is generally very diﬃcult to fulﬁll this task since the information included
in the peptide-protein bipartite graph is insuﬃcient for distinguishing correct peptide-protein matches from
incorrect ones. Yang et al. (2013) mathematically investigated the ambiguity that will be induced by the
uncertainty on the assignment of shared peptides. They derived a lower bound and an upper bound on
the protein existence probability. Roughly speaking, all statistical protein inference methods will deliver a
probability value between the lower bound and the upper bound. This partially explains why no methods
can always perform the best in our experiments since all these methods cannot completely resolve the shared
peptide assignment problem. In other words, all existing methods have already reached their theoretical
limitation in protein inference if no supplementary data are provided for facilitating the inference. Therefore,
it is unlikely that one can further improve the identiﬁcation performance by only digging more on the
mathematical formulation of the protein inference problem based on standard input data.
In fact, many researchers have already realized the aforementioned problem and begun to seek solutions by including supplementary information in the protein inference process. That is, in addition to
the standard input data, supplementary data and information such as the single-stage MS data (He et al.,
2010, 2011), peptide detectabilities (Li et al., 2009b; Huang et al., 2013) and protein-protein interactions
(Ramakrishnan et al., 2009a; Li et al., 2009a) are utilized in the protein inference model as well. The use
of extra information from other data sources may overcome the limitation of currently available protein
inference algorithms.
5. Conclusions
Protein inference problem can be regarded as a special protein quantiﬁcation problem. In this paper,
we investigate the feasibility of solving the protein inference problem with existing protein quantiﬁcation
methods in the context of label-free proteomics. The experimental results show that such a new angle
enables us to obtain better identiﬁcation performance even with some simple quantiﬁcation approaches.
We have tested three protein quantiﬁcation methods for solving the protein inference problem. These
three methods can achieve good performance but none of them are consistently the best method on all the
data sets. Thus, it is still necessary to develop better algorithms. In the future work, we plan to try more
quantiﬁcation methods to check if we can further improve the identiﬁcation performance.
Acknowledgements
This work was partially supported by the Natural Science Foundation of China under Grant No. 61572094
and the Fundamental Research Funds for the Central Universities of China (DUT14QY07).
References
Bishop, C. M., 1995. Neural Networks for Pattern Recognition. Oxford University Press, USA.

13

Z.He et al. / Computational Biology and Chemistry 00 (2015) 1–14

14

Brunner, E., Ahrens, C. H., Mohanty, S., Baetschmann, H., Loevenich, S., Potthast, F., Deutsch, E. W., Panse, C., de Lichtenberg, U., Rinner, O., Lee, H., Pedrioli, P. G. A., Malmstrom, J., Koehler, K., Schrimpf, S., Krijgsveld, J., Kregenow,
F., Heck, A. J. R., Hafen, E., Schlapbach, R., Aebersold, R., 2007. A high-quality catalog of the drosophila melanogaster
proteome. Nature Biotechnology 25 (5), 576–583.
Choi, H., Fermin, D., Nesvizhskii, A. I., 2008. Signiﬁcance analysis of spectral count data in label-free shotgun proteomics.
Molecular & Cellular Proteomics 7 (12), 2373–2385.
Claassen, M., 2012. Inference and validation of protein identiﬁcations. Molecular & Cellular Proteomics 11 (11), 1097–1104.
Craig, R., Beavis, R. C., 2004. Tandem: matching proteins with tandem mass spectra. Bioinformatics 20 (9), 1466–1467.
Dost, B., Bandeira, N., Li, X., Shen, Z., Briggs, S., Bafna, V., 2012. Accurate mass spectrometry based protein quantiﬁcation
via shared peptides. Journal of Computational Biology 19 (4), 337–348.
Gao, J., Tan, P.-N., 2006. Converting output scores from outlier detection algorithms into probability estimates. In: IEEE
International Conference on Data Mining. Hong Kong, China, pp. 212–221.
He, Z., Yang, C., Yang et al, C., 2010. Optimization-based peptide mass ﬁngerprinting for protein mixture identiﬁcation.
Journal of Computational Biology 17 (3), 221–235.
He, Z., Yang, C., Yu, W., 2011. A partial set covering model for protein mixture identiﬁcation using mass spectrometry data.
IEEE/ACM Transactions on Computational Biology and Bioinformatics 8 (2), 368–380.
Huang, T., Gong, H., Yang, C., He, Z., 2013. Proteinlasso: A lasso regression approach to protein inference problem in shotgun
proteomics. Computational Biology and Chemistry 43, 46–54.
Huang, T., He, Z., 2012. A linear programming model for protein inference problem in shotgun proteomics. Bioinformatics
28 (22), 2956–2962.
Huang, T., Wang, J., Yu, W., He, Z., 2012. Protein inference: A review. Brieﬁngs in Bioinformatics 13 (5), 586–614.
Keller, A., Nesvizhskii, A. I., Kolker, E., Aebersold, R., 2002. Empirical statistical model to estimate the accuracy of peptide
identiﬁcations made by MS/MS and database search. Analytical Chemistry 74 (20), 5383–5392.
Kim, D. H., 2012. Deconvolution of PPI networks: Approximation algorithms and optimization techniques. Ph.D. thesis, McGill
University.
Klimek, J., Eddes, J. S., Hohmann, L., 2008. The Standard Protein Mix Database: A diverse data set to assist in the production
of improved peptide and protein identiﬁcation software tools. Journal of Proteome Research 7 (1), 96–103.
Li, J., Zimmerman, L. J., Park, B.-H., Tabb, D. L., Liebler, D. C., Zhang, B., 2009a. Network-assisted protein identiﬁcation
and data interpretation in shotgun proteomics. Molecular Systems Biology 5, 303.
Li, Y. F., Arnold, R. J., Li, Y., Radivojac, P., Sheng, Q., Tang, H., 2009b. A Bayesian approach to protein inference problem
in shotgun proteomics. Journal of Computational Biology 16 (8), 1–11.
Li, Y. F., Radivojac, P., 2012. Computational approaches to protein inference in shotgun proteomics. BMC Bioinformatics
13 (Suppl 16), S4.
Lukasse, P. N., America, A. H., 2014. Protein inference using peptide quantiﬁcation patterns. Journal of proteome research
13 (7), 3191–3199.
Lundgren, D. H., Hwang, S.-I., Wu, L., Han, D. K., 2010. Role of spectral counting in quantitative proteomics. Expert Review
of Proteomics 7 (1), 39–53.
Neilson, K. A., Ali, N. A., Muralidharan, S., Mirzaei, M., Mariani, M., Assadourian, G., Lee, A., van Sluyter, S. C., Haynes,
P. A., 2011. Less label, more free: Approaches in label-free quantitative mass spectrometry. Proteomics 11 (4), 535–553.
Nesvizhskii, A. I., Keller, A., Kolker, E., Aebersold, R., 2003. A statistical model for identifying proteins by tandem mass
spectrometry. Analytical Chemistry 75 (17), 4646–4658.
Nesvizhskii, A. I., Vitek, O., Aebersold, R., 2007. Analysis and validation of proteomic data generated by tandem mass
spectrometry. Nature Methods 4 (10), 787–797.
Nikolov, M., Schmidt, C., Urlaub, H., 2012. Quantitative mass spectrometry-based proteomics: an overview. Methods in
Molecular Biology 893, 85–100.
Perkins, D. N., J.Pappin, D., M.Creasy, D., Cottrell, J. S., 1999. Probability-based protein identiﬁcation by searching sequence
databases using mass spectrometry data. Electrophoresis 20 (18), 3551–3567.
Platt, J. C., 2000. Probabilistic outputs for support vector machines and comparison to regularized likelihood methods. In:
Advances in Large Margin Classiﬁers. MIT Press, pp. 61–74.
Ramakrishnan, S. R., Vogel, C., Kwon, T., Penalva, L. O., Marcotte, E. M., Miranker, D. P., 2009a. Mining gene functional
networks to improve mass-spectrometry based protein identiﬁcation. Bioinformatics 25 (22), 2955–2961.
Ramakrishnan, S. R., Vogel, C., Prince, J. T., Wang, R., Li, Z., Penalva, L. O., Myers, M., Marcotte, E. M., Miranker, D. P.,
2009b. Integrating shotgun proteomics and mRNA expression data to improve protein identiﬁcation. Bioinformatics 25 (11),
1397–1403.
Tabb, D. L., Fernando, C. G., Chambers, M. C., 2007. Myrimatch: highly accurate tandem mass spectral peptide identiﬁcation
by multivariate hypergeometric analysis. Journal of Proteome Research 6 (2), 654–661.
Tang, H., Arnold, R. J., Alves et al, P., 2006. A computational approach toward label-free protein quantiﬁcation using predicted
peptide detectability. Bioinformatics 22 (14), 481–488.
Teng, B., Huang, T., He, Z., 2014. Decoy-free protein-level false discovery rate estimation. Bioinformatics 30 (5), 675–681.
Yang, C., He, Z., Yu, W., 2013. A combinatorial perspective of the protein inference problem. IEEE/ACM Transactions on
Computational Biology and Bioinformatics 10 (6), 1542–1547.
Zhang, Y., Wen, Z., Washburn, M. P., Florens, L., 2010. Reﬁnements to label free proteome quantitation: How to deal with
peptides shared by multiple proteins. Molecular & Cellular Proteomics 82 (6), 2272–2281.
Zhao, C., Liu, D., Teng, B., He, Z., 2015. BagReg: Protein inference through machine learning. Computational biology and
chemistry 57, 12–20.

14

View publication stats

