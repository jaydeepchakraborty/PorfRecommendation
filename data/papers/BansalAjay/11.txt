Black Hole Artificial Bee Colony Algorithm
Artificial bee colony (ABC) is an efficient methodology to solve optimization problems. Here, in this article a modified variant of ABC, namely Black Hole ABC algorithm (BHABC) is proposed which is based on the natural space black hole (BH) phenomenon. In BHABC, the implementation of BH gives a high exploration ability while maintaining the original exploitation ability of the ABC algorithm. The suggested algorithm is judged against 12 benchmark test functions and accessed with original ABC and its two modifications, that are Best So Far ABC (BSFABC) and Modified ABC (MABC). The results reveals that BHABC is a competitive variant of ABC.

A Low-Power Integrated x86-64 and Graphics Processor for Mobile Computing Devices
:
80 stream processors, a media accelerator, an integrated NorthBridge (NB), integrated DisplayPort, LVDS, and VGA display interfaces, a PCIe® Gen1 or Gen2 I/O interface, and a single 64-bit memory channel at up to DDR3-1066 on a single die implemented in a 40 nm bulk CMOS process

Artificial intelligence applications in Permanent Magnet Brushless DC motor drives
Permanent Magnet Brushless DC (PMBLDC) machines are more popular due its simple structure and low cost. Improvements in permanent magnetic materials and power electronic devices have resulted in reliable, cost effective PMBLDC drives, for many applications. Advances in artificial intelligent applications like neural network, fuzzy logic, Genetic algorithm etc. have made tremendous impact on electric motor drives. The brushless DC motor is a multivariable and non-linear system. In conventional PMBLDC drives speed and position sensing of brushless DC motors require high degree of accuracy. Unfortunately, traditional methods of control require detailed modelling of all the motor parameters to achieve this. The Intelligent control techniques like, fuzzy logic control/Neural network control etc. uses heuristic input–output relations to deal with vague and complex situations. This paper presents a literature survey on the intelligent control techniques for PMBLDC motor drives. Various AI techniques for PMBLDC motor drives are described. Attempt is made to provide a guideline and quick reference for the researchers and practicing engineers those are working in the area of PMBLDC motor drives.
Weaving Functional and Non-Functional Attributes for Dynamic Web Service Composition
Given the numerous, potentially reusable, Web services available on the Internet, search and composition techniques that efficiently discover viable services will be a strong requirement. A major challenge for dynamic Web service composition will be the ability to measure the quality or reliability of services that are delivered. In this paper, we present a solution for dynamic Web service composition that leverages non-functional attributes provided in the form of Service-Level Agreements (SLA's). The objective of our work is to understand the most efficient algorithms for discovering and composing web services into capabilities with predictable quality. As such, we analyze different approaches to composition when web service composition routines must take into account functional and nonfunctional information. We present our algorithm, a prototype implementation, and experimental results obtained from the various approaches to "weaving" attributes (of different dimensions) as a part of the composition process.
Continuing the Web Services Challenge
:
The capabilities of organizations can be openly exposed, easily searched and discovered, and made readily-accessible to humans and particularly to machines, using service-oriented computing approaches. Artificial intelligence and software engineering researchers alike are tantalized by the promise of ubiquitously discovering and incorporating services into their own business processes (i.e. composition and orchestration). With growing acceptance of service-oriented computing, an emerging area of research is the investigation of technologies that will enable the discovery and composition of web services. The Web Services Challenge (WSC) is a forum where academic and industry researchers can share experiences of developing tools that automate the integration of Web services. In the fourth year (i.e. WSC-08) of the Web Services Challenge, software platforms will address several new composition challenges. Requests and results will be transmitted within SOAP messages. In addition, semantics will be represented as ontologies written in OWL, services will be represented in WSDL, and service orchestrations will be represented in WS-BPEL.

An Agent-Based Approach for Composition of Semantic Web Services
:
The paradigm of Service-oriented computing (SOC) introduces emerging concepts for distributed- and e-business processing enabling the sharing and reuse of service-centric capabilities. The underpinning for an organization's use of SOC techniques is the ability to discover and compose Web services. Leading industry approaches rely heavily on syntactical approaches for managing service-based business processes. As such, these approaches are limited since the true functionality of ambiguous capabilities (i.e. web service operations) cannot be inferred. We introduce approaches that disambiguate services by interleaving process-based control with semantic annotations. In this paper, we introduce a generalized architecture where intelligent software agents control process-oriented composition that leverages the descriptiveness of semantics. An outcome of this work is the specification of a multiple agent system where a query agent interacts with multiple repository agents to perform business-oriented service composition.

Co-Logic Programming: Extending Logic Programming with Coinduction
In this paper we present the theory and practice of co-logic programming (co-LP for brevity), a paradigm that combines both inductive and coinductive logic programming. Co-LP is a natural generalization of logic programming and coinductive logic programming, which in turn generalizes other extensions of logic programming, such as infinite trees, lazy predicates, and concurrent communicating predicates. Co-LP has applications to rational trees, verifying infinitary properties, lazy evaluation, concurrent LP, model checking, bisimilarity proofs, etc.

Coinductive Logic Programming
We extend logic programming’s semantics with the semantic dual of traditional Herbrand semantics by using greatest fixed-points in place of least fixed-points. Executing a logic program then involves using coinduction to check inclusion in the greatest fixed-point. The resulting coinductive logic programming language is syntactically identical to, yet semantically subsumes logic programming with rational terms and lazy evaluation. We present a novel formal operational semantics that is based on synthesizing a coinductive hypothesis for this coinductive logic programming language. We prove that this new operational semantics is equivalent to the declarative semantics. Our operational semantics lends itself to an elegant and efficient goal directed proof search in the presence of rational terms and proofs. We describe a prototype implementation of this operational semantics along with applications of coinductive logic programming.




